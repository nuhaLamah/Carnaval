[{"C:\\projects\\carnival\\src\\index.js":"1","C:\\projects\\carnival\\src\\reportWebVitals.js":"2","C:\\projects\\carnival\\src\\App.js":"3","C:\\projects\\carnival\\src\\redux\\Actions\\stores.js":"4","C:\\projects\\carnival\\src\\api.js":"5","C:\\projects\\carnival\\src\\component\\login\\Login.jsx":"6","C:\\projects\\carnival\\src\\component\\login\\components\\InputField.jsx":"7","C:\\projects\\carnival\\src\\redux\\Actions\\login.js":"8","C:\\projects\\carnival\\src\\redux\\Actions\\customer.js":"9","C:\\projects\\carnival\\src\\redux\\reducers\\index.js":"10","C:\\projects\\carnival\\src\\redux\\reducers\\loginReducer.js":"11","C:\\projects\\carnival\\src\\redux\\reducers\\customerReducer.js":"12","C:\\projects\\carnival\\src\\component\\ErrorMessage.jsx":"13","C:\\projects\\carnival\\src\\component\\qrReader\\QrReader.jsx":"14","C:\\projects\\carnival\\src\\component\\StoreForms\\SuccessReg.jsx":"15","C:\\projects\\carnival\\src\\component\\StoreForms\\StoreAddress.jsx":"16","C:\\projects\\carnival\\src\\component\\StoreForms\\StoreData.jsx":"17","C:\\projects\\carnival\\src\\component\\customer\\CustomerForm.jsx":"18","C:\\projects\\carnival\\src\\component\\QrReader\\QrReader.jsx":"19","C:\\projects\\carnival\\src\\component\\StoresDisplay\\ChangeStoreState.jsx":"20","C:\\projects\\carnival\\src\\component\\StoresDisplay\\StoreList.jsx":"21","C:\\projects\\carnival\\src\\component\\StoresDisplay\\Print.jsx":"22","C:\\projects\\carnival\\src\\component\\StoresDisplay\\Store.jsx":"23","C:\\projects\\carnival\\src\\component\\StoresDisplay\\NavBar.jsx":"24","C:\\projects\\carnival\\src\\component\\StoresDisplay\\PageButtons.jsx":"25","C:\\projects\\carnival\\src\\component\\StoresDisplay\\SearchBox.jsx":"26","C:\\projects\\carnival\\src\\component\\StoresDisplay\\QrCode.jsx":"27","C:\\projects\\carnival\\src\\redux\\reducers\\storeReducer.js":"28","C:\\projects\\carnival\\src\\component\\Home.jsx":"29","C:\\projects\\carnival\\src\\makaniAPI.js":"30"},{"size":994,"mtime":1612092712745,"results":"31","hashOfConfig":"32"},{"size":375,"mtime":1611826649718,"results":"33","hashOfConfig":"32"},{"size":1813,"mtime":1613038506629,"results":"34","hashOfConfig":"32"},{"size":2862,"mtime":1613038506658,"results":"35","hashOfConfig":"32"},{"size":2502,"mtime":1613038506662,"results":"36","hashOfConfig":"32"},{"size":2500,"mtime":1612790862496,"results":"37","hashOfConfig":"32"},{"size":752,"mtime":1612788192291,"results":"38","hashOfConfig":"32"},{"size":952,"mtime":1612779088440,"results":"39","hashOfConfig":"32"},{"size":414,"mtime":1613038506636,"results":"40","hashOfConfig":"32"},{"size":309,"mtime":1612780145438,"results":"41","hashOfConfig":"32"},{"size":493,"mtime":1612345123707,"results":"42","hashOfConfig":"32"},{"size":377,"mtime":1612612134134,"results":"43","hashOfConfig":"32"},{"size":284,"mtime":1612615128266,"results":"44","hashOfConfig":"32"},{"size":1029,"mtime":1612789707685,"results":"45","hashOfConfig":"32"},{"size":1068,"mtime":1613038506630,"results":"46","hashOfConfig":"32"},{"size":3955,"mtime":1613038506629,"results":"47","hashOfConfig":"32"},{"size":7270,"mtime":1613038506630,"results":"48","hashOfConfig":"32"},{"size":4991,"mtime":1613038506634,"results":"49","hashOfConfig":"32"},{"size":1058,"mtime":1613038506636,"results":"50","hashOfConfig":"32"},{"size":844,"mtime":1612791099969,"results":"51","hashOfConfig":"32"},{"size":2275,"mtime":1612857682995,"results":"52","hashOfConfig":"32"},{"size":936,"mtime":1612692975018,"results":"53","hashOfConfig":"32"},{"size":1634,"mtime":1612771339152,"results":"54","hashOfConfig":"32"},{"size":825,"mtime":1612781621290,"results":"55","hashOfConfig":"32"},{"size":1722,"mtime":1612353575917,"results":"56","hashOfConfig":"32"},{"size":827,"mtime":1612355908964,"results":"57","hashOfConfig":"32"},{"size":761,"mtime":1612692817060,"results":"58","hashOfConfig":"32"},{"size":1045,"mtime":1613038506641,"results":"59","hashOfConfig":"32"},{"size":955,"mtime":1612790542413,"results":"60","hashOfConfig":"32"},{"size":419,"mtime":1612960476633,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"zwf2px",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\projects\\carnival\\src\\index.js",[],["131","132"],"C:\\projects\\carnival\\src\\reportWebVitals.js",[],"C:\\projects\\carnival\\src\\App.js",[],"C:\\projects\\carnival\\src\\redux\\Actions\\stores.js",["133","134"],"import * as api from '../../api';\r\n<<<<<<< HEAD\r\nimport ChangeStoreState from '../../component/StoresDisplay/ChangeStoreState';\r\nimport{ getLocationInfo } from '../../makaniAPI';\r\n\r\n\r\n=======\r\n>>>>>>> f40d70612e0c04e8f6aecc719418a89b9f907a80\r\nexport const addStore = (store) => async (dispatch) => {\r\n  try {\r\n    const msg = await api.addStore(store);\r\n    dispatch({ type: 'REG_STORE', payload: msg });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\nexport const filterStores = (keySearch,pageNumber , perPage) => async (dispatch, useState) => {\r\n  try {\r\n    const response = await api.filterStores(keySearch, pageNumber, perPage);\r\n    //console.log(response);\r\n    if(response.status ===200 || response.status ===201) {\r\n      const totalPages =  response.data.total_pages;\r\n      dispatch({ type:'FETCH_STORES' , payload: response.data.markets });\r\n      dispatch({ type:'CHANGE_TOTAL_PAGES' , payload: totalPages===0?1:totalPages });\r\n      dispatch({ type:'CHANGE_PAGE' , payload: pageNumber});\r\n      dispatch({ type:'CHANGE_FILTER_TERM' , payload: keySearch});\r\n    }\r\n  } catch (error) {\r\n    if(error.response.data.status===401 && error.response.data.sub_status===42){\r\n      const newAccessToken = await (await api.refreshAccessToken()).data.access_token;\r\n    \r\n      localStorage.setItem(\"access_token\", newAccessToken);\r\n      filterStores();\r\n  }\r\n  \r\n}\r\n};\r\n\r\nexport const checkAddress = (address) => async (dispatch) => {\r\n  //console.log(address);\r\n  try {\r\n<<<<<<< HEAD\r\n    const {data} = await getLocationInfo(address);\r\n    console.log(data);\r\n\r\n    dispatch({ type: 'ADDRESS', payload: data });\r\n=======\r\n    const {data} = await api.checkAddress(address);\r\n    //console.log(data.place_info);\r\n    if(data.place_info.status === \"valid\")\r\n    dispatch({ type: 'ADDRESS', payload: data.place_info , isInValid:false });\r\n    else\r\n    {\r\n      dispatch({ type: 'ADDRESS', payload: data.place_info , isInValid:true });\r\n    }\r\n>>>>>>> f40d70612e0c04e8f6aecc719418a89b9f907a80\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({ type: 'INVALID_ADDRESS', payload: true });\r\n  }\r\n};\r\n\r\nexport const changeState= (storeCode, state) => async (dispatch, useState) => {\r\n  try {\r\n    //console.log('state', storeCode, state)\r\n    await api.ChangeStoreState(storeCode, state);\r\n    const storeList = [...useState().stores.storeList].map(store => store.code ===storeCode? {...store, state:state}: store);\r\n    dispatch({ type:'FETCH_STORES' , payload: storeList });\r\n    //console.log(data)   \r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}; \r\n\r\nexport const getStoreInfo = (storeCode) => async (dispatch) => {\r\n  try{\r\n    const {data} = await api.getStore(storeCode);\r\n    //console.log(data.market_info)\r\n    dispatch({type:'SET_STORE_INFO', payload: data.market_info});\r\n  }\r\n  catch(e){\r\n    console.log(e)\r\n  }\r\n}","C:\\projects\\carnival\\src\\api.js",[],"C:\\projects\\carnival\\src\\component\\login\\Login.jsx",["135"],"import React, {useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport {login} from '../../redux/Actions/login';\r\nimport InputField from './components/InputField';\r\nimport ErrorMessage from '../ErrorMessage';\r\n\r\nimport logo from '../../image/logo.png';\r\nimport './Login.css';\r\n\r\nconst Login = (props) => {\r\n    const [loginData, setLoginData] = useState({username: '', password: ''});\r\n   \r\n    const [isShowPassword, setIsShowPassword] = useState(false);\r\n \r\n   \r\n    const showPassword = ()=> {\r\n        console.log('show')\r\n    setIsShowPassword(!isShowPassword);\r\n    } \r\n\r\n    const onChangeInput = (e) => {\r\n    setLoginData({...loginData, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const onSubmitForm= (e) =>{\r\n        e.preventDefault();\r\n        props.login(loginData)\r\n    }\r\n\r\n\r\n return  props.logState? <Redirect to=\"/StoreList\" />\r\n    :(\r\n       \r\n        <div className=\"ui container centered grid log-container\">\r\n          \r\n          <form className=\"ui form segment log-form\" onSubmit={onSubmitForm}>\r\n          <img  className=\"ui centered medium image\" src={logo} />\r\n              <div className=\"field\">\r\n              {props.logError? <ErrorMessage head=\"Login Error\" content=\"Wrong username or password\" />:null}\r\n              </div>\r\n            <h4 className=\"ui header title\" >تسجيل الدخول</h4>\r\n            <p style={{padding: '5px'}}></p>\r\n                    <InputField name=\"username\" type=\"text\" placeholder=\"Username\" onChange={onChangeInput} icon=\"user icon\" />\r\n                    <p style={{padding: '1.5px'}}></p>\r\n                    <InputField name=\"password\" type={isShowPassword ? 'text' : 'password'} placeholder=\"Password\" onChange={onChangeInput} \r\n                    icon={isShowPassword? 'icon eye': 'icon eye slash'} onIconClick = {showPassword}/>\r\n                  \r\n                  \r\n                    <div className=\"field\">\r\n                        <center>\r\n                        <button className=\"fluid ui big button log-btn\" type=\"submit\">دخول</button>\r\n                        </center>\r\n                    </div>\r\n                    \r\n                    \r\n            </form>\r\n            </div>\r\n           \r\n       \r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({loginInfo}) => {\r\n    console.log(loginInfo.logState)\r\nreturn {logState: loginInfo.logState, logError: loginInfo.logError}\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","C:\\projects\\carnival\\src\\component\\login\\components\\InputField.jsx",[],"C:\\projects\\carnival\\src\\redux\\Actions\\login.js",[],"C:\\projects\\carnival\\src\\redux\\Actions\\customer.js",["136"],"import * as api from '../../api';\r\n\r\nexport const addCustomer = (customer) => async (dispatch) => {\r\n  console.log(customer);\r\n    try {\r\n      const data   = await api.addCustomer(customer);\r\n      //console.log(data);\r\n      dispatch({ type:'SET_IS_DONE', payload:true });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type:'SET_IS_ERROR', payload:true });\r\n    }\r\n  };\r\n\r\n  \r\n","C:\\projects\\carnival\\src\\redux\\reducers\\index.js",[],"C:\\projects\\carnival\\src\\redux\\reducers\\loginReducer.js",[],"C:\\projects\\carnival\\src\\redux\\reducers\\customerReducer.js",[],"C:\\projects\\carnival\\src\\component\\ErrorMessage.jsx",[],"C:\\projects\\carnival\\src\\component\\qrReader\\QrReader.jsx",["137"],"import React, { Component } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport QrReader from 'react-qr-reader';\r\nimport { getStoreInfo } from '../../redux/Actions/stores';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './QrReader.css';\r\n \r\nconst QrScanner = () => {\r\n  const dispatch = useDispatch();\r\n  const info = useSelector(state => state.stores.storeInfo);\r\n  const handleScan = data => {\r\n    console.log(data);\r\n    if(data)dispatch(getStoreInfo(data));\r\n  }\r\n  const handleError = err => {\r\n    console.error(err)\r\n  }\r\n  \r\n\r\n    return (\r\n      <div className=\"center aligned reader\" >\r\n        <div className=\"border\"></div>\r\n        {info?\r\n        <Redirect to= \"/RegisterCustomer\" />:\r\n           \r\n          <QrReader\r\n          delay={300}\r\n          onError={handleError}\r\n          onScan={handleScan}\r\n          style={{ width: '100%', height: '100%', postion: 'relative',\r\n          borderRadius: '25px'}}\r\n        />\r\n    \r\n        \r\n    }\r\n      \r\n      \r\n      </div>\r\n    )\r\n  \r\n}\r\n\r\nexport default QrScanner;",["138","139"],"C:\\projects\\carnival\\src\\component\\StoreForms\\SuccessReg.jsx",[],"C:\\projects\\carnival\\src\\component\\StoreForms\\StoreAddress.jsx",[],"C:\\projects\\carnival\\src\\component\\StoreForms\\StoreData.jsx",["140"],"import React , {useState , useEffect} from 'react';\r\nimport { useDispatch , useSelector} from 'react-redux';\r\nimport {addStore} from '../../redux/Actions/stores';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport  uniqueRandom from 'unique-random-at-depth';\r\nimport { Checkbox,Button, Modal } from 'semantic-ui-react';\r\nimport './style.css';\r\n\r\n\r\nconst StoreData = ({storeDefaultData , address}) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const data = useSelector((data)=>data.stores.address);\r\n\r\n    const [storeData, setStoreData] = useState({name:'',owner_name:'',market_phone :0,owner_phone:0,email:'',category:'',postcode:'',building_number:'',code:''})\r\n    const [checkbox,setCheckbox] = useState(true);\r\n    const [storeCode , setStoreCode] = useState(0);\r\n    const [open, setOpen] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setStoreCode(uniqueRandom(100000, 1000000, 50));\r\n        if (data.status === 'valid') \r\n        {\r\n          storeData.name = storeDefaultData.name;\r\n          storeData.market_phone = storeDefaultData.phoneNumber;\r\n          storeData.category = storeDefaultData.category;\r\n          storeData.postcode = address.code;\r\n          storeData.building_Number = address.number;\r\n          storeData.code = storeCode;\r\n        }\r\n    },[data.status]);\r\n\r\n    const handleChange =(e)=>{\r\n        setStoreData({...storeData,[e.target.name]:e.target.value});\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        dispatch(addStore(storeData));\r\n        //console.log(storeData);\r\n        history.push(`/Success/${storeCode}`);\r\n        setStoreData({name:'',owner_name:'',market_phone :0,owner_phone:0,email:'',category:'',postcode:'',building_number:'',code:''})\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <form className=\"ui form\" onSubmit={handleSubmit}>\r\n        <div className=\"ui form\">\r\n        <div className=\"field\">\r\n            <label className=\"text\">اسم المحل</label>\r\n            <input type=\"text\" name=\"name\" placeholder=\"اسم المحل\" defaultValue={storeDefaultData.name} onChange={handleChange}/>\r\n        </div>\r\n        <div className=\"field\">\r\n            <label className=\"text\" >اسم صاحب المحل</label>\r\n            <input type=\"text\" name=\"owner_name\" placeholder=\"اسم صاحب المحل\"  onChange={handleChange}/>\r\n        </div>\r\n        <div className=\"field\">\r\n            <label className=\"text\" >رقم هاتف المحل</label>\r\n            <input type=\"text\" name=\"market_phone\" placeholder=\"رقم هاتف المحل\" defaultValue ={storeDefaultData.phoneNumber} onChange={handleChange}/>\r\n        </div>\r\n        <div className=\"field\">\r\n            <label className=\"text\" >رقم هاتف صاحب المحل</label>\r\n            <input type=\"text\" name=\"owner_phone\" placeholder=\"رقم هاتف صاحب المحل\" onChange={handleChange}/>\r\n        </div>\r\n        <div className=\"field\">\r\n            <label className=\"text\" >البريد الالكتروني</label>\r\n            <input type=\"text\" name=\"email\" placeholder=\"البريد الالكتروني\" onChange={handleChange}/>\r\n        </div>\r\n        <div className=\"field\">\r\n            <label className=\"text\">نوع النشاط</label>\r\n            <input type=\"text\" name=\"category\" placeholder=\"نوع النشاط\" defaultValue ={storeDefaultData.category} onChange={handleChange}/>\r\n        </div>\r\n        <div className=\"field\" >   \r\n            <Checkbox name = \"isChecked\" onClick={()=>setCheckbox(!checkbox)} className=\"checkbox\" />\r\n             <span> اوافق على  </span>\r\n            <Modal\r\n            open={open}\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            trigger={<b className=\"terms\" >شروط الاشتراك</b>  }\r\n            >\r\n            <Modal.Header className=\"term-header\">شروط الاشترك </Modal.Header>\r\n            <Modal.Content image scrolling>\r\n        \r\n            <Modal.Description>\r\n            <p className=\"term-desc\">\r\n            فيما يلي القوانين اللازم اتباعها للمشاركة في مهرجان مصراتة للتسوق\r\n            </p>\r\n\r\n            <ol className=\"term-list\">\r\n                <li>الالتزام بالإجراءات الوقائية من فيروس كورونا حسب الخطة الموضوعة اللجنة العليا .</li>\r\n                <li>إلزام الموظفين والزوار بارتداء الكمامات داخل الجناح او المحل.</li>\r\n                <li>توفير المعقمات الطبية داخل المحل .</li>\r\n                <li>التقيد بإجراءات التباعد الإجتماعي مسافة واحد متر على الأقل.</li>\r\n                <li>التقيد بعدم الإزدحام وذلك بتحديد العدد الكافي للتباعد الإجتماعي.</li>\r\n                <li>توزيع كوبونات المهرجان مجانا بدون فرض قيمة على الزبون او اجباره على الشراء .</li>\r\n            </ol>\r\n            </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n            <Button onClick={() => setOpen(false)} primary>\r\n            إغلاق\r\n            </Button>\r\n            </Modal.Actions>\r\n            </Modal>\r\n            \r\n            </div>\r\n        <div className=\"field\"> \r\n        <button className=\"ui button text\" disabled = {checkbox} type=\"submit\">تـسـجـيـل</button>\r\n        </div>\r\n        </div>\r\n        </form>  \r\n         \r\n       </>\r\n    );\r\n}\r\n\r\nexport default StoreData;","C:\\projects\\carnival\\src\\component\\customer\\CustomerForm.jsx",["141","142","143","144"],"import React , {useState} from 'react'\r\nimport logo from '../../image/logo.png';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport { addCustomer } from '../../redux/Actions/customer';\r\nimport InputField from '../login/components/InputField';\r\nimport ErrorMessage from '../ErrorMessage';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst CustomerForm = () => {\r\n    const isError = useSelector(state => state.customer.isError);\r\n    const isDone = useSelector(state => state.customer.isDone);\r\n    const storeInfo = useSelector(state => state.stores.storeInfo);\r\n    const dispatch = useDispatch();\r\n    const [customerData, setCustomerData] = useState({fullname:'', phone_number:'',building_number:'123',postcode:'FDE125',market_code:'111111', city:'مصراتة'});\r\n    \r\n    const cityList = ['مصراتة','طرابلس','بنغازي','غريان','الخمس','زليتن','سرت','الزاوية'];\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const {fullname,phone_number,city} = customerData\r\n        //console.log(customerData);\r\n        if(fullname && phone_number )\r\n        {\r\n          console.log(customerData);\r\n          dispatch(addCustomer(customerData));\r\n          //setCustomerData({name:'',phone_number:'',building_number:'',postcode:''})\r\n        }\r\n        else\r\n        {\r\n        alert(\"please check again\");\r\n        }\r\n    };\r\n    const handleChange = (e)=> {\r\n        setCustomerData({...customerData,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    return (\r\n        <div className=\"ui container centered grid reg-container\" > \r\n        <div className=\"ui form segment log-form\" >\r\n        <form className=\"ui form\" >\r\n        <img className=\"ui centered medium image\" alt=\"logo\" src={logo}/>\r\n        <h2 style={{textAlign:'center', fontFamily: 'inherit'}}>نموذج  المشاركة </h2>\r\n        <h3 style={{fontFamily: 'inherit'}}>اسم المحل:{storeInfo.name}</h3>\r\n        {isError? <ErrorMessage head=\"Can't be added\" content=\"you have to check your inputs\" />: null}\r\n        <div className=\"ui form\">\r\n        <div className=\"field\">\r\n            <label className=\"text\">الاسم</label>\r\n            <input type=\"text\" name=\"fullname\" onChange ={handleChange} placeholder=\"الاسم\" required/>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n            <label className=\"text\" >رقم الهاتف</label>\r\n            <input type=\"tel\" name=\"phone_number\" placeholder=\"رقم الهاتف\" onChange ={handleChange} maxLength=\"10\" required/>\r\n        </div>\r\n\r\n       \r\n        <div class=\"field\">\r\n            <label className=\"text\" >المدينة</label>\r\n            <select name=\"city\" className=\"ui search dropdown drop-text\" >\r\n            <option value=\"\">اختر مدينة</option>\r\n            {\r\n                cityList.map((city,index)=>\r\n                <option value={city} key={index}>{city}</option>)\r\n            }\r\n            </select>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n        <button className=\"ui button text\" type=\"submit\" onClick={handleSubmit}>تسجيل</button>\r\n        </div>\r\n\r\n        </div>\r\n        </form>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerForm;\r\n\r\n","C:\\projects\\carnival\\src\\component\\QrReader\\QrReader.jsx",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\ChangeStoreState.jsx",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\StoreList.jsx",["145"],"import React , {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport {filterStores} from '../../redux/Actions/stores';\r\nimport Store from './Store';\r\nimport NavBar from './NavBar';\r\nimport SearchBox from './SearchBox';\r\nimport PageButtons from './PageButtons';\r\nimport './StoreList.css';\r\n\r\nconst StoreList = ()=> {\r\n  \r\n      \r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n    dispatch(filterStores(\"\", 1, 5));\r\n    }, [dispatch]);\r\n\r\n     \r\n      // const [search,setSearchInput] = useState(\"\");\r\n      const markets = useSelector((markets) => markets.stores.storeList)\r\n\r\n      \r\n    return (\r\n      <div className=\"ui container main-div \">\r\n        <NavBar>\r\n        <SearchBox />\r\n        </NavBar> \r\n        <div className=\"ui container stores-table \">\r\n        {markets.length==0? <div className=\"ui container center aligned\">لا يوجد نتائج</div>:\r\n        <table className=\"ui table \">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"center aligned\">اسم المحل</th>\r\n              <th className=\"center aligned\"> العنوان البريدي</th>\r\n              <th className=\"center aligned\"> رقم المبنى</th>\r\n\r\n              <th className=\"center aligned\"> اسم المالك</th>\r\n              <th className=\"center aligned\"> رقم هاتف المالك</th>\r\n              <th className=\"center aligned\">رقم هاتف المحل</th>\r\n\r\n              <th className=\"center aligned\">إيميل</th>\r\n              <th className=\"center aligned\">نوع النشاط</th>  \r\n              <th className=\"center aligned\">الكود</th>\r\n              \r\n              <th className=\"center aligned\">الحالة</th>\r\n              <th className=\"center aligned\">التاريخ</th>\r\n              <th className=\"center aligned\">عمليات</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            \r\n          { \r\n            markets.map((store,index)=>\r\n            <Store store = {store} key={index} />         \r\n            )\r\n        }\r\n          </tbody>\r\n          </table> }\r\n          </div>\r\n          <p></p>\r\n          <p></p>\r\n          <p></p>\r\n          <PageButtons />\r\n      </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default StoreList","C:\\projects\\carnival\\src\\component\\StoresDisplay\\Print.jsx",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\Store.jsx",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\NavBar.jsx",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\PageButtons.jsx",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\SearchBox.jsx",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\QrCode.jsx",[],"C:\\projects\\carnival\\src\\redux\\reducers\\storeReducer.js",[],"C:\\projects\\carnival\\src\\component\\Home.jsx",[],"C:\\projects\\carnival\\src\\makaniAPI.js",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":24},{"ruleId":"154","severity":1,"message":"155","line":64,"column":98,"nodeType":"156","messageId":"157","endLine":64,"endColumn":99,"fix":"158"},{"ruleId":"159","severity":1,"message":"160","line":39,"column":11,"nodeType":"161","endLine":39,"endColumn":67},{"ruleId":"150","severity":1,"message":"162","line":6,"column":13,"nodeType":"152","messageId":"153","endLine":6,"endColumn":17},{"ruleId":"150","severity":1,"message":"163","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":26},{"ruleId":"146","replacedBy":"164"},{"ruleId":"148","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":28,"column":7,"nodeType":"168","endLine":28,"endColumn":20,"suggestions":"169"},{"ruleId":"150","severity":1,"message":"170","line":5,"column":8,"nodeType":"152","messageId":"153","endLine":5,"endColumn":18},{"ruleId":"150","severity":1,"message":"171","line":7,"column":9,"nodeType":"152","messageId":"153","endLine":7,"endColumn":17},{"ruleId":"150","severity":1,"message":"172","line":11,"column":11,"nodeType":"152","messageId":"153","endLine":11,"endColumn":17},{"ruleId":"150","severity":1,"message":"173","line":20,"column":38,"nodeType":"152","messageId":"153","endLine":20,"endColumn":42},{"ruleId":"174","severity":1,"message":"175","line":31,"column":24,"nodeType":"176","messageId":"177","endLine":31,"endColumn":26},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'ChangeStoreState' is defined but never used.","Identifier","unusedVar","rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"180","text":"181"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'data' is assigned a value but never used.","'Component' is defined but never used.",["178"],["179"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'address.code', 'address.number', 'storeCode', 'storeData', 'storeDefaultData.category', 'storeDefaultData.name', and 'storeDefaultData.phoneNumber'. Either include them or remove the dependency array.","ArrayExpression",["182"],"'InputField' is defined but never used.","'Redirect' is defined but never used.","'isDone' is assigned a value but never used.","'city' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",[2060,2061],"",{"desc":"183","fix":"184"},"Update the dependencies array to be: [address.code, address.number, data.status, storeCode, storeData, storeDefaultData.category, storeDefaultData.name, storeDefaultData.phoneNumber]",{"range":"185","text":"186"},[1217,1230],"[address.code, address.number, data.status, storeCode, storeData, storeDefaultData.category, storeDefaultData.name, storeDefaultData.phoneNumber]"]