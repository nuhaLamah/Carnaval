[{"C:\\projects\\carnival\\src\\index.js":"1","C:\\projects\\carnival\\src\\reportWebVitals.js":"2","C:\\projects\\carnival\\src\\App.js":"3","C:\\projects\\carnival\\src\\redux\\reducers\\index.js":"4","C:\\projects\\carnival\\src\\component\\Home.jsx":"5","C:\\projects\\carnival\\src\\component\\StoresDisplay\\Print.jsx":"6","C:\\projects\\carnival\\src\\component\\NotFound.jsx":"7","C:\\projects\\carnival\\src\\component\\StoresDisplay\\StoreList.jsx":"8","C:\\projects\\carnival\\src\\component\\StoreForms\\SuccessReg.jsx":"9","C:\\projects\\carnival\\src\\component\\StoreForms\\StoreAddress.jsx":"10","C:\\projects\\carnival\\src\\component\\login\\Login.jsx":"11","C:\\projects\\carnival\\src\\component\\QrReader\\QrReader.jsx":"12","C:\\projects\\carnival\\src\\component\\Customer\\CustomerForm.jsx":"13","C:\\projects\\carnival\\src\\redux\\reducers\\customerReducer.js":"14","C:\\projects\\carnival\\src\\redux\\reducers\\storeReducer.js":"15","C:\\projects\\carnival\\src\\redux\\reducers\\loginReducer.js":"16","C:\\projects\\carnival\\src\\redux\\Actions\\login.js":"17","C:\\projects\\carnival\\src\\redux\\Actions\\stores.js":"18","C:\\projects\\carnival\\src\\redux\\Actions\\customer.js":"19","C:\\projects\\carnival\\src\\component\\Footer.jsx":"20","C:\\projects\\carnival\\src\\component\\StoresDisplay\\NavBar.jsx":"21","C:\\projects\\carnival\\src\\component\\StoresDisplay\\QrCode.jsx":"22","C:\\projects\\carnival\\src\\component\\StoresDisplay\\Store.jsx":"23","C:\\projects\\carnival\\src\\component\\StoresDisplay\\SearchBox.jsx":"24","C:\\projects\\carnival\\src\\component\\StoresDisplay\\PageButtons.jsx":"25","C:\\projects\\carnival\\src\\component\\StoreForms\\StoreData.jsx":"26","C:\\projects\\carnival\\src\\component\\ErrorMessage.jsx":"27","C:\\projects\\carnival\\src\\component\\Customer\\ReCaptcha.jsx":"28","C:\\projects\\carnival\\src\\component\\login\\components\\InputField.jsx":"29","C:\\projects\\carnival\\src\\api.js":"30","C:\\projects\\carnival\\src\\apiCustomer.js":"31","C:\\projects\\carnival\\src\\component\\StoresDisplay\\ChangeStoreState.jsx":"32","C:\\projects\\carnival\\src\\redux\\reducers\\storeListReducer.js":"33"},{"size":993,"mtime":1615116350486,"results":"34","hashOfConfig":"35"},{"size":375,"mtime":1615116188764,"results":"36","hashOfConfig":"35"},{"size":2174,"mtime":1615116342855,"results":"37","hashOfConfig":"35"},{"size":395,"mtime":1615275980436,"results":"38","hashOfConfig":"35"},{"size":797,"mtime":1615116308191,"results":"39","hashOfConfig":"35"},{"size":806,"mtime":1614161611989,"results":"40","hashOfConfig":"35"},{"size":1032,"mtime":1615116303514,"results":"41","hashOfConfig":"35"},{"size":4128,"mtime":1615276232409,"results":"42","hashOfConfig":"35"},{"size":1143,"mtime":1614073133786,"results":"43","hashOfConfig":"35"},{"size":5798,"mtime":1615116209590,"results":"44","hashOfConfig":"35"},{"size":2666,"mtime":1615116244917,"results":"45","hashOfConfig":"35"},{"size":1165,"mtime":1615116238789,"results":"46","hashOfConfig":"35"},{"size":6889,"mtime":1615116298215,"results":"47","hashOfConfig":"35"},{"size":377,"mtime":1612612134134,"results":"48","hashOfConfig":"35"},{"size":738,"mtime":1615275896162,"results":"49","hashOfConfig":"35"},{"size":493,"mtime":1613807543333,"results":"50","hashOfConfig":"35"},{"size":821,"mtime":1613807599312,"results":"51","hashOfConfig":"35"},{"size":4293,"mtime":1615276958568,"results":"52","hashOfConfig":"35"},{"size":982,"mtime":1615116085445,"results":"53","hashOfConfig":"35"},{"size":359,"mtime":1615116313477,"results":"54","hashOfConfig":"35"},{"size":762,"mtime":1613806605722,"results":"55","hashOfConfig":"35"},{"size":732,"mtime":1615116195921,"results":"56","hashOfConfig":"35"},{"size":1766,"mtime":1615116201822,"results":"57","hashOfConfig":"35"},{"size":748,"mtime":1615116161177,"results":"58","hashOfConfig":"35"},{"size":1715,"mtime":1615276140161,"results":"59","hashOfConfig":"35"},{"size":7980,"mtime":1615116085430,"results":"60","hashOfConfig":"35"},{"size":311,"mtime":1615116319194,"results":"61","hashOfConfig":"35"},{"size":560,"mtime":1615116252972,"results":"62","hashOfConfig":"35"},{"size":773,"mtime":1613647521805,"results":"63","hashOfConfig":"35"},{"size":2473,"mtime":1613897177617,"results":"64","hashOfConfig":"35"},{"size":407,"mtime":1615116184560,"results":"65","hashOfConfig":"35"},{"size":844,"mtime":1612791099969,"results":"66","hashOfConfig":"35"},{"size":970,"mtime":1615275947185,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"zwf2px",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\projects\\carnival\\src\\index.js",[],["138","139"],"C:\\projects\\carnival\\src\\reportWebVitals.js",[],"C:\\projects\\carnival\\src\\App.js",[],"C:\\projects\\carnival\\src\\redux\\reducers\\index.js",[],"C:\\projects\\carnival\\src\\component\\Home.jsx",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\Print.jsx",[],"C:\\projects\\carnival\\src\\component\\NotFound.jsx",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\StoreList.jsx",[],"C:\\projects\\carnival\\src\\component\\StoreForms\\SuccessReg.jsx",[],"C:\\projects\\carnival\\src\\component\\StoreForms\\StoreAddress.jsx",["140"],"import React, { useState, useEffect } from 'react';\r\nimport logo from '../../image/logo.png';\r\nimport StoreData from './StoreData';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { checkAddress } from '../../redux/Actions/stores';\r\nimport ErrorMessage from '../ErrorMessage';\r\nimport Footer from '../Footer';\r\nimport './style.css';\r\n\r\nconst StoreAddress = () => {\r\n    const dispatch = useDispatch();\r\n    const isError = useSelector(state => state.stores.isError);\r\n    const isInValid = useSelector(state => state.stores.isInValid);\r\n    const storeDefaultData = useSelector((addressData) => addressData.stores.address);\r\n    const [showButton, setShowButton] = useState(false);\r\n    const [address, setAddress] = useState({ code: '', number: '' });\r\n    const [validInput, setValidInput] = useState({ status: false, type: 'generalError', msg: 'الرجاء التاكد من صحة البيانات المدخلة' });\r\n    const categoryList = [1, 4, 12, 15, 18, 22, 24];\r\n\r\n    const checkCategory = (category) => {\r\n\r\n        if (categoryList.includes(category)) {\r\n            setValidInput({ status: true, type: 'generalError', msg: 'يجب أن يكون العنوان المدخل من ضمن التصنيفات المتاحة' });\r\n            return true;\r\n        }\r\n        setValidInput({ status: false, type: \"\", msg: \"\" })\r\n        return false;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (storeDefaultData.status === 'valid' && !checkCategory(storeDefaultData.CategoryId)) {\r\n            setShowButton(true);\r\n        }\r\n\r\n    }, [storeDefaultData, dispatch]);\r\n\r\n    const handleAdressSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { code, number } = address\r\n        if (code && number && validInput.status === false)\r\n            dispatch(checkAddress(`${address.code}+${address.number}`));\r\n        else\r\n            setValidInput({ status: true, type: 'generalError', msg: \" يجب ادخال الرمز البريدي ورقم المبنى\" })\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setAddress({ ...address, [e.target.name]: e.target.value })\r\n    }\r\n    const handleChangeOfNumber = (e) => {\r\n        if (isNaN(e.target.value))\r\n            setValidInput({ status: true, type: \"NumberError\", msg: \"يجب إدخال رقم فقط\" })\r\n        else {\r\n            setAddress({ ...address, [e.target.name]: e.target.value })\r\n            setValidInput({ status: false, type: \"\", msg: \"\" })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ padding: \"15px 0px\" }}>\r\n            <div className=\"main-container\">\r\n                <div className=\"ui container centered grid\" >\r\n                    <div className=\"ui form segment log-form\" >\r\n                        <form className=\"ui form\" >\r\n                            <img className=\"ui centered medium image\" alt=\"logo\" src={logo} />\r\n                            <h2 style={{ textAlign: 'center', fontFamily: 'inherit' }}>نموذج  التسجيل </h2>\r\n                            {isError || isInValid || (validInput.status && validInput.type === \"generalError\") ? (<ErrorMessage head=\"لقد حدث خطأ \" content={validInput.msg ? validInput.msg : \" العنوان المدخل غير صحيح الرجاء التأكد\"} />) : null}\r\n                            {/* --------- Makani validation ------------ */}\r\n                            <div className=\"ui form\">\r\n                                <div className={validInput.status && validInput.type === \"NumberError\" ? 'error field' : 'field'}>\r\n                                    <label className=\"text required\" >رقم المبنى</label>\r\n                                    <input type=\"text\" name=\"number\" placeholder=\"رقم المبنى\" onChange={handleChangeOfNumber} maxLength=\"4\" required />\r\n                                    <div className=\"five wide field\">\r\n                                        <p>{validInput.status && validInput.type === \"NumberError\" ? `${validInput.msg}` : ''}</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"field \">\r\n                                    <label className=\"text required\">الرمز البريدي</label>\r\n                                    <input type=\"text\" name=\"code\" onChange={handleChange} placeholder=\"الرمز البريدي\" maxLength=\"5\" required />\r\n                                </div>\r\n\r\n                                <div className=\"field\">\r\n                                    {!showButton ? (<button className=\"ui button text\" type=\"submit\" onClick={handleAdressSubmit}>تحقق</button>) : <></>}\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        {!showButton ? <div className=\"address-reg\">\r\n                            ليس لديك عنوان،<a href=\"https://makani.ly/addplace/\" target=\"_blank\" rel=\"noreferrer\"> قم بتسجيل نشاطك التجاري الآن</a>\r\n                        </div> : <></>}\r\n                        {/* --------- divider ------------ */}\r\n                        {showButton ? (\r\n                            <div className=\"ui section divider\"></div>\r\n                        ) : <></>}\r\n                        {/* --------- Store Rgisteration ------------ */}\r\n                        {showButton ? (\r\n                            <StoreData address={address} validInput={validInput} setValidInput={setValidInput} />\r\n                        ) : null}\r\n                        <div className=\"ui section divider\"></div>\r\n                        <Footer />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default StoreAddress;\r\n\r\n","C:\\projects\\carnival\\src\\component\\login\\Login.jsx",[],"C:\\projects\\carnival\\src\\component\\QrReader\\QrReader.jsx",[],"C:\\projects\\carnival\\src\\component\\Customer\\CustomerForm.jsx",["141"],"import React, { useEffect, useState } from 'react'\r\nimport logo from '../../image/CustomerLogo.png';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addCustomer } from '../../redux/Actions/customer';\r\nimport { getStoreInfo } from '../../redux/Actions/stores';\r\nimport ErrorMessage from '../ErrorMessage';\r\nimport ReCaptcha from './ReCaptcha';\r\nimport Footer from '../Footer';\r\n\r\nconst CustomerForm = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const isError = useSelector(state => state.customer.isError);\r\n    const isDone = useSelector(state => state.customer.isDone);\r\n    const storeInfo = useSelector(state => state.stores.storeInfo);\r\n\r\n    const [verfied, setVerified] = useState(false)\r\n    const [validInput, setValidInput] = useState({ status: false, type: '', msg: 'الرجاء التاكد من صحة البيانات المدخلة' });\r\n    const [customerData, setCustomerData] = useState({ fullname: '', phonenumber: '', buildingnumber: '', postcode: '', shopname: '', city: '' });\r\n\r\n    const cityList = ['مصراتة', 'طرابلس', 'بنغازي', 'غريان', 'الخمس', 'زليتن', 'سرت', 'الزاوية'];\r\n    if (storeInfo) {\r\n        customerData.buildingnumber = storeInfo.building_number;\r\n        customerData.postcode = storeInfo.postcode;\r\n        customerData.shopname = storeInfo.name + \" \" + storeInfo.details;\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getStoreInfo(props.match.params.storeCode));\r\n    }, []);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const { fullname, phonenumber, city } = customerData\r\n        let nameLen = fullname.trim().split(\" \").length;\r\n        if (nameLen >= 4 && nameLen <= 7) {\r\n            if (isNaN(fullname) && !isNaN(phonenumber) && phonenumber.length === 10 && city && !validInput.status) {\r\n                dispatch(addCustomer(customerData));\r\n            }\r\n            else {\r\n                setValidInput({ status: true, type: 'generalError', msg: \" يجب أن تكون المدخلات غير فارغة وصحيحة \" })\r\n            }\r\n        }\r\n        else\r\n            setValidInput({ status: true, type: 'generalError', msg: 'الرجاء ادخال الاسم الرباعي ' });\r\n\r\n    };\r\n\r\n    const handleChangeOfNumber = (e) => {\r\n        if (isNaN(e.target.value))\r\n            setValidInput({ status: true, type: \"NumberError\", msg: \"يجب إدخال رقم فقط\" })\r\n        else {\r\n            setCustomerData({ ...customerData, [e.target.name]: e.target.value })\r\n            setValidInput({ status: false, type: \"\", msg: \"\" })\r\n        }\r\n    }\r\n    const handleChangeOfText = (e) => {\r\n        let format = /[`!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?~1234567890]/;\r\n        if (!isNaN(e.target.value) || format.test(e.target.value))\r\n            setValidInput({ status: true, type: \"TextError\", msg: \"يجب ادخال حروف فقط\" })\r\n        else {\r\n            setCustomerData({ ...customerData, [e.target.name]: e.target.value })\r\n            setValidInput({ status: false, type: \"\", msg: \"\" })\r\n        }\r\n    }\r\n\r\n    const form = () => (\r\n        <div>\r\n            <div className=\"ui container centered grid reg-container\" >\r\n                <div className=\"ui form segment log-form\" >\r\n                    <form className=\"ui form \" >\r\n                        <img className=\"ui centered large image\" alt=\"logo\" src={logo} />\r\n                        <h2 style={{ fontFamily: 'inherit', color: \"#222\", marginTop: \"50px\" }}><b>نموذج المشاركة </b> </h2>\r\n                        <h3 style={{ fontFamily: 'inherit', color: \"#222\" }}><b>{storeInfo.name}</b> {storeInfo.details} </h3>\r\n\r\n                        {isError || (validInput.status && validInput.type === \"generalError\") ? (<ErrorMessage head=\"لقد حدث خطأ\" content={validInput.msg ? validInput.msg : \"لا يمكنك التسجيل الآن\"} />) : null}\r\n                        <div className=\"ui form\" >\r\n                            <div className={validInput.status && validInput.type === \"TextError\" ? 'error field' : 'field'}>\r\n                                <label className=\"text required\">الاسم الرباعي</label>\r\n                                <input type=\"text\" name=\"fullname\" onChange={handleChangeOfText} placeholder=\"الاسم\" required maxLength=\"40\" />\r\n                                <div className=\"five wide field\">\r\n                                    <p>{validInput.status && validInput.type === \"TextError\" ? `${validInput.msg}` : ''}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={validInput.status && validInput.type === \"NumberError\" ? 'error field' : 'field'}>\r\n                                <label className=\"text required\" >رقم الهاتف</label>\r\n                                <div className=\"ui labeled input \">\r\n                                    <input type=\"tel\" name=\"phonenumber\" placeholder=\"xxxxxxxx\" onChange={handleChangeOfNumber} maxLength=\"10\" required />\r\n                                    <p>{validInput.status && validInput.type === \"NumberError\" ? `${validInput.msg}` : ''}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"field \">\r\n                                <label className=\"text required\" >المدينة</label>\r\n                                <select name=\"city\" className=\"ui search dropdown drop-text\" onChange={handleChangeOfText}>\r\n                                    <option value=\"\">اختر مدينة</option>\r\n                                    {\r\n                                        cityList.map((city, index) =>\r\n                                            <option value={city} key={index}>{city}</option>)\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"ui centered medium image\" style={{ marginTop: \"30px\" }}>\r\n                                <ReCaptcha setVerified={setVerified} />\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <button className=\"ui button text\" type=\"submit\" onClick={handleSubmit} disabled={!verfied} >تسجيل</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"ui section divider\"></div>\r\n                    <Footer />\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n    return (\r\n        isDone ? (() => {\r\n            setCustomerData({ fullname: '', phonenumber: '', buildingnumber: '', postcode: '', shopname: '', city: '' });\r\n\r\n        }) : storeInfo ? form() : <></>\r\n    )\r\n}\r\n\r\nexport default CustomerForm;\r\n\r\n","C:\\projects\\carnival\\src\\redux\\reducers\\customerReducer.js",[],"C:\\projects\\carnival\\src\\redux\\reducers\\storeReducer.js",[],"C:\\projects\\carnival\\src\\redux\\reducers\\loginReducer.js",[],"C:\\projects\\carnival\\src\\redux\\Actions\\login.js",[],"C:\\projects\\carnival\\src\\redux\\Actions\\stores.js",[],"C:\\projects\\carnival\\src\\redux\\Actions\\customer.js",[],"C:\\projects\\carnival\\src\\component\\Footer.jsx",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\NavBar.jsx",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\QrCode.jsx",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\Store.jsx",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\SearchBox.jsx",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\PageButtons.jsx",[],"C:\\projects\\carnival\\src\\component\\StoreForms\\StoreData.jsx",["142"],"import React , {useState , useEffect } from 'react';\r\nimport { useDispatch , useSelector} from 'react-redux';\r\nimport { addStore , clearInfo} from '../../redux/Actions/stores';\r\nimport  uniqueRandom from 'unique-random-at-depth';\r\nimport Modal from 'react-modal';\r\nimport './style.css';\r\n\r\nconst StoreData = ({address ,validInput ,setValidInput }) => {\r\n    const dispatch = useDispatch();\r\n    \r\n    const data = useSelector((data)=>data.stores.address);\r\n    const [storeData, setStoreData] = useState({name:'',owner_name:'',market_phone :'',owner_phone:'',email:'',category:'',postcode:'',building_number:'',code:0 , details:''})\r\n    const [checkbox,setCheckbox] = useState(true);\r\n    const [open, setOpen] = useState(false);\r\n    const [storeCode , setStoreCode] = useState(uniqueRandom(100000, 1000000, 50));\r\n   \r\n    useEffect(() => {\r\n        if(data.status === 'valid'){\r\n            storeData.name = data.name;\r\n            storeData.market_phone = data.phoneNumber;\r\n            storeData.category = data.category;\r\n            storeData.details = data.details;\r\n            storeData.postcode = address.code;\r\n            storeData.building_number = address.number;\r\n            storeData.code =storeCode;\r\n            dispatch(clearInfo()); \r\n          }\r\n         \r\n          \r\n     },[data,address,storeCode,dispatch]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const {owner_name ,owner_phone} = storeData\r\n        if(isNaN(owner_name) && !isNaN(owner_phone) && owner_phone.length === 10 && validInput.status===false) {\r\n           dispatch(addStore(storeData));  \r\n           setStoreCode(0);\r\n        }\r\n        else\r\n        {\r\n            setValidInput({status : true ,type:'generalError', msg:\"يجب أن  تكون المدخلات غير فارغة وصحيحة \"})\r\n        }\r\n    };\r\n    const handleChange =(e)=>{\r\n        setStoreData({...storeData,[e.target.name]:e.target.value});\r\n    }\r\n    const handleChangeOfNumber = (e)=>{\r\n        if(isNaN(e.target.value) && e.target.name === 'market_phone')\r\n        setValidInput({status : true , type :\"NumberErrorMarket\" , msg:\"يجب إدخال رقم فقط\"})\r\n        else if (isNaN(e.target.value) && e.target.name === 'owner_phone')\r\n        setValidInput({status : true , type :\"NumberErrorOwner\" , msg:\"يجب إدخال رقم فقط\"})\r\n        else{\r\n            setStoreData({...storeData,[e.target.name]:e.target.value});\r\n            setValidInput({status : false,type:\"\" , msg:\"\"})\r\n        }\r\n    }\r\n    const handleChangeOfText = (e)=>{\r\n        let format = /[`!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?~]/;\r\n        if(!isNaN(e.target.value)  || format.test(e.target.value))\r\n        setValidInput({status : true , type :\"TextError\" , msg:\"يجب ادخال حروف فقط\"})\r\n        else{\r\n            setStoreData({...storeData,[e.target.name]:e.target.value});\r\n            setValidInput({status : false,type:\"\" , msg:\"\"})\r\n        }\r\n    }\r\n    const customStyles = {\r\n        content : {\r\n          top                   : '50%',\r\n          left                  : '50%',\r\n          right                 : 'auto',\r\n          bottom                : 'auto',\r\n          marginRight           : '-50%',\r\n          transform             : 'translate(-50%, -50%)'\r\n        }\r\n    };\r\n    return (\r\n        data?(\r\n        <form className=\"ui form\" onSubmit={handleSubmit}>\r\n        <div className=\"ui form\">\r\n        <div className=\"field\">\r\n        <label className=\"text \">اسم المحل</label>\r\n            <input disabled type=\"text\" name=\"name\" placeholder=\"اسم المحل\" defaultValue={data.name}  required  />\r\n        </div>\r\n        <div className=\"field\">\r\n        <label className=\"text \">تفاصيل</label>\r\n            <input disabled type=\"text\" name=\"name\" placeholder=\"تفاصيل\" defaultValue={data.details}  required  />\r\n        </div>\r\n        <div className={validInput.status && validInput.type=== \"TextError\" ?'error field':'field'}>\r\n            <label className=\"text required\" >اسم صاحب المحل</label>\r\n            <input type=\"text\" name=\"owner_name\" placeholder=\"اسم صاحب المحل\"  onChange={handleChangeOfText} maxLength=\"40\"/>\r\n            <div className=\"five wide field\">\r\n            <p>{validInput.status && validInput.type=== \"TextError\" ?`${validInput.msg}`:''}</p>\r\n            </div>  \r\n        </div>\r\n        <div className={validInput.status && validInput.type=== \"NumberErrorMarket\" ?'error field':'field'}>\r\n            <label className=\"text\" >رقم هاتف المحل</label>\r\n            <input type=\"text\" name=\"market_phone\"  defaultValue ={data.phoneNumber} placeholder=\"xxxxxxxx\" onChange ={handleChangeOfNumber} maxLength=\"10\"/>\r\n            <p>{validInput.status && validInput.type=== \"NumberErrorMarket\" ?`${validInput.msg}`:''}</p>\r\n        </div>\r\n\r\n        <div className={validInput.status && validInput.type=== \"NumberErrorOwner\" ?'error field':'field'}>\r\n            <label className=\"text required\" >رقم هاتف صاحب المحل</label>\r\n            <input type=\"text\" name=\"owner_phone\" placeholder=\"xxxxxxxx\" onChange ={handleChangeOfNumber} maxLength=\"10\"/>\r\n            <p>{validInput.status && validInput.type=== \"NumberErrorOwner\" ?`${validInput.msg}`:''}</p>\r\n        </div>\r\n        <div className=\"field\">\r\n            <label className=\"text\" >البريد الالكتروني</label>\r\n            <input type=\"email\" name=\"email\" placeholder=\"البريد الالكتروني\" onChange={handleChange}/>\r\n        </div>\r\n        \r\n        <div className=\"field \">\r\n            <label  className=\"text\">نوع النشاط</label>\r\n            <input disabled type=\"text\" name=\"category\" placeholder=\"نوع النشاط\" defaultValue ={data.category} />\r\n        </div>\r\n        \r\n        <div className=\"field\" >   \r\n         <input className=\"checkbox\" type=\"checkbox\" name = \"isChecked\" onClick={()=>setCheckbox(!checkbox)} /> \r\n             <span> أوافق على  </span>\r\n            <span className=\"terms\" onClick={(e) => {setOpen(true)}}>شروط الاشتراك</span><span className=\"required\"></span>\r\n            <div>\r\n        <Modal\r\n          isOpen={open}  \r\n          onRequestClose={() => setOpen(false)}\r\n          ariaHideApp={false}\r\n          contentLabel=\"Terms Modal\"\r\n          style={customStyles}\r\n        >\r\n          <div className = \"term-header\">شروط الاشتراك</div>\r\n          <div className=\"term-desc\">\r\n            فيما يلي القوانين اللازم اتباعها للمشاركة في مهرجان مصراتة للتسوق\r\n          </div>\r\n          <ol className=\"term-list\">\r\n                <li>الالتزام بالإجراءات الوقائية من فيروس كورونا حسب الخطة الموضوعة اللجنة العليا .</li>\r\n                <li>إلزام الموظفين والزوار بارتداء الكمامات داخل الجناح او المحل.</li>\r\n                <li>توفير المعقمات الطبية داخل المحل .</li>\r\n                <li>التقيد بإجراءات التباعد الإجتماعي مسافة واحد متر على الأقل.</li>\r\n                <li>التقيد بعدم الإزدحام وذلك بتحديد العدد الكافي للتباعد الإجتماعي.</li>\r\n                <li>توزيع كوبونات المهرجان مجانا بدون فرض قيمة على الزبون او اجباره على الشراء .</li>\r\n            </ol>\r\n            <button className=\"button btn-terms primary\" onClick={() => setOpen(false)} >\r\n            إغلاق\r\n            </button>\r\n        </Modal>\r\n      </div>\r\n        </div>    \r\n        <div className=\"field\"> \r\n        <button className=\"ui button text\" disabled = {checkbox} type=\"submit\">تـسـجـيـل</button>\r\n        </div>\r\n        </div>\r\n        </form> ) :<></>\r\n    );\r\n}\r\n\r\nexport default StoreData;","C:\\projects\\carnival\\src\\component\\ErrorMessage.jsx",[],"C:\\projects\\carnival\\src\\component\\Customer\\ReCaptcha.jsx",[],"C:\\projects\\carnival\\src\\component\\login\\components\\InputField.jsx",[],"C:\\projects\\carnival\\src\\api.js",[],"C:\\projects\\carnival\\src\\apiCustomer.js",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\ChangeStoreState.jsx",[],"C:\\projects\\carnival\\src\\redux\\reducers\\storeListReducer.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":35,"column":8,"nodeType":"149","endLine":35,"endColumn":36,"suggestions":"150"},{"ruleId":"147","severity":1,"message":"151","line":30,"column":8,"nodeType":"149","endLine":30,"endColumn":10,"suggestions":"152"},{"ruleId":"147","severity":1,"message":"153","line":29,"column":8,"nodeType":"149","endLine":29,"endColumn":41,"suggestions":"154"},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkCategory'. Either include it or remove the dependency array.","ArrayExpression",["157"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.storeCode'. Either include them or remove the dependency array.",["158"],"React Hook useEffect has a missing dependency: 'storeData'. Either include it or remove the dependency array.",["159"],"no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [storeDefaultData, dispatch, checkCategory]",{"range":"166","text":"167"},"Update the dependencies array to be: [dispatch, props.match.params.storeCode]",{"range":"168","text":"169"},"Update the dependencies array to be: [data, address, storeCode, dispatch, storeData]",{"range":"170","text":"171"},[1492,1520],"[storeDefaultData, dispatch, checkCategory]",[1420,1422],"[dispatch, props.match.params.storeCode]",[1241,1274],"[data, address, storeCode, dispatch, storeData]"]