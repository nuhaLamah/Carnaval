[{"C:\\projects\\carnival\\src\\index.js":"1","C:\\projects\\carnival\\src\\reportWebVitals.js":"2","C:\\projects\\carnival\\src\\App.js":"3","C:\\projects\\carnival\\src\\redux\\reducers\\index.js":"4","C:\\projects\\carnival\\src\\component\\Home.jsx":"5","C:\\projects\\carnival\\src\\component\\StoresDisplay\\Print.jsx":"6","C:\\projects\\carnival\\src\\component\\StoresDisplay\\StoreList.jsx":"7","C:\\projects\\carnival\\src\\component\\login\\Login.jsx":"8","C:\\projects\\carnival\\src\\component\\StoreForms\\SuccessReg.jsx":"9","C:\\projects\\carnival\\src\\component\\StoreForms\\StoreAddress.jsx":"10","C:\\projects\\carnival\\src\\component\\customer\\CustomerForm.jsx":"11","C:\\projects\\carnival\\src\\redux\\reducers\\customerReducer.js":"12","C:\\projects\\carnival\\src\\redux\\reducers\\loginReducer.js":"13","C:\\projects\\carnival\\src\\redux\\reducers\\storeReducer.js":"14","C:\\projects\\carnival\\src\\redux\\Actions\\login.js":"15","C:\\projects\\carnival\\src\\redux\\Actions\\stores.js":"16","C:\\projects\\carnival\\src\\redux\\Actions\\customer.js":"17","C:\\projects\\carnival\\src\\component\\StoresDisplay\\QrCode.jsx":"18","C:\\projects\\carnival\\src\\component\\StoresDisplay\\NavBar.jsx":"19","C:\\projects\\carnival\\src\\component\\StoresDisplay\\Store.jsx":"20","C:\\projects\\carnival\\src\\component\\StoresDisplay\\PageButtons.jsx":"21","C:\\projects\\carnival\\src\\component\\ErrorMessage.jsx":"22","C:\\projects\\carnival\\src\\component\\StoresDisplay\\SearchBox.jsx":"23","C:\\projects\\carnival\\src\\component\\login\\components\\InputField.jsx":"24","C:\\projects\\carnival\\src\\component\\StoreForms\\StoreData.jsx":"25","C:\\projects\\carnival\\src\\api.js":"26","C:\\projects\\carnival\\src\\component\\StoresDisplay\\ChangeStoreState.jsx":"27","C:\\projects\\carnival\\src\\component\\QrReader\\QrReader.jsx":"28","C:\\projects\\carnival\\src\\apiMakani.js":"29","C:\\projects\\carnival\\src\\apiCustomer.js":"30","C:\\projects\\carnival\\src\\component\\customer\\ReCaptcha.jsx":"31"},{"size":994,"mtime":1612092712745,"results":"32","hashOfConfig":"33"},{"size":375,"mtime":1611826649718,"results":"34","hashOfConfig":"33"},{"size":1812,"mtime":1613479959592,"results":"35","hashOfConfig":"33"},{"size":309,"mtime":1612780145438,"results":"36","hashOfConfig":"33"},{"size":955,"mtime":1613463708910,"results":"37","hashOfConfig":"33"},{"size":776,"mtime":1613469156365,"results":"38","hashOfConfig":"33"},{"size":2541,"mtime":1613479959597,"results":"39","hashOfConfig":"33"},{"size":2503,"mtime":1613479959599,"results":"40","hashOfConfig":"33"},{"size":1062,"mtime":1613463721707,"results":"41","hashOfConfig":"33"},{"size":4002,"mtime":1613470212540,"results":"42","hashOfConfig":"33"},{"size":5350,"mtime":1613479959598,"results":"43","hashOfConfig":"33"},{"size":377,"mtime":1612612134134,"results":"44","hashOfConfig":"33"},{"size":493,"mtime":1612345123707,"results":"45","hashOfConfig":"33"},{"size":1176,"mtime":1613374633603,"results":"46","hashOfConfig":"33"},{"size":821,"mtime":1613479959601,"results":"47","hashOfConfig":"33"},{"size":3208,"mtime":1613479959601,"results":"48","hashOfConfig":"33"},{"size":1033,"mtime":1613479959600,"results":"49","hashOfConfig":"33"},{"size":596,"mtime":1613470212546,"results":"50","hashOfConfig":"33"},{"size":785,"mtime":1613479959596,"results":"51","hashOfConfig":"33"},{"size":1790,"mtime":1613470212547,"results":"52","hashOfConfig":"33"},{"size":1722,"mtime":1612353575917,"results":"53","hashOfConfig":"33"},{"size":284,"mtime":1612615128266,"results":"54","hashOfConfig":"33"},{"size":798,"mtime":1613466493074,"results":"55","hashOfConfig":"33"},{"size":752,"mtime":1612788192291,"results":"56","hashOfConfig":"33"},{"size":7920,"mtime":1613479959595,"results":"57","hashOfConfig":"33"},{"size":2008,"mtime":1613479959593,"results":"58","hashOfConfig":"33"},{"size":844,"mtime":1612791099969,"results":"59","hashOfConfig":"33"},{"size":1225,"mtime":1613374633600,"results":"60","hashOfConfig":"33"},{"size":343,"mtime":1613473288085,"results":"61","hashOfConfig":"33"},{"size":461,"mtime":1613479959594,"results":"62","hashOfConfig":"33"},{"size":424,"mtime":1613479959598,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zwf2px",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"79"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"79"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\projects\\carnival\\src\\index.js",[],"C:\\projects\\carnival\\src\\reportWebVitals.js",[],"C:\\projects\\carnival\\src\\App.js",[],"C:\\projects\\carnival\\src\\redux\\reducers\\index.js",[],"C:\\projects\\carnival\\src\\component\\Home.jsx",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\Print.jsx",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\StoreList.jsx",["130"],"import React , {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {filterStores} from '../../redux/Actions/stores';\r\nimport Store from './Store';\r\nimport NavBar from './NavBar';\r\nimport SearchBox from './SearchBox';\r\nimport PageButtons from './PageButtons';\r\n\r\nimport './StoreList.css';\r\nimport backgroundImg from '../../image/header.png';\r\n\r\nconst StoreList = ()=> {\r\n  \r\n      \r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n    dispatch(filterStores(\"\", 1, 5));\r\n    }, [dispatch]);\r\n\r\n    const markets = useSelector((markets) => markets.stores.storeList)\r\n    return (\r\n      <div>\r\n        <center>\r\n\r\n          <img className=\"background\" src={backgroundImg} width='100%'  alt=\"main\"/>\r\n  \r\n        </center>\r\n\r\n        <div className=\"ui container main-div \">\r\n\r\n        <h1 className=\"ui container center aligned page-title\">المحلات المسجلة</h1>\r\n        <NavBar>\r\n              <SearchBox />\r\n        </NavBar>  \r\n        <div className=\"ui container stores-table \">\r\n          \r\n        {markets.length===0? <div className=\"ui container center aligned\">لا يوجد نتائج</div>:\r\n        <table className=\"ui table \">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"center aligned\">اسم المحل</th>\r\n              <th className=\"center aligned\"> العنوان البريدي</th>\r\n              <th className=\"center aligned\"> رقم المبنى</th>\r\n\r\n              <th className=\"center aligned\"> اسم المالك</th>\r\n              <th className=\"center aligned\"> رقم هاتف المالك</th>\r\n              <th className=\"center aligned\">رقم هاتف المحل</th>\r\n\r\n              <th className=\"center aligned\">إيميل</th>\r\n              <th className=\"center aligned\">نوع النشاط</th>  \r\n              <th className=\"center aligned\">الكود</th>\r\n              \r\n              <th className=\"center aligned\">الحالة</th>\r\n              <th className=\"center aligned\">التاريخ</th>\r\n              <th className=\"center aligned\">عمليات</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            \r\n          { \r\n            markets.map((store,index)=>\r\n            <Store store = {store} key={index} />         \r\n            )\r\n        }\r\n          </tbody>\r\n          </table> }\r\n          </div>\r\n          <p></p>\r\n          <p></p>\r\n          <p></p>\r\n          <PageButtons />\r\n      </div>\r\n      </div>\r\n      \r\n    \r\n    )\r\n}\r\n\r\nexport default StoreList",["131","132"],"C:\\projects\\carnival\\src\\component\\login\\Login.jsx",["133"],"import React, {useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport {login} from '../../redux/Actions/login';\r\nimport InputField from './components/InputField';\r\nimport ErrorMessage from '../ErrorMessage';\r\n\r\nimport logo from '../../image/logo.png';\r\nimport './Login.css';\r\n\r\nconst Login = (props) => {\r\n    const [loginData, setLoginData] = useState({username: '', password: ''});\r\n   \r\n    const [isShowPassword, setIsShowPassword] = useState(false);\r\n \r\n   \r\n    const showPassword = ()=> {\r\n    setIsShowPassword(!isShowPassword);\r\n    } \r\n\r\n    const onChangeInput = (e) => {\r\n    setLoginData({...loginData, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const onSubmitForm= (e) =>{\r\n        e.preventDefault();\r\n        props.login(loginData)\r\n    }\r\n\r\n\r\n return  props.logState? <Redirect to=\"/StoreList\" />\r\n    :(\r\n       \r\n        <div className=\"ui container centered grid center-all\">\r\n          \r\n          <form className=\"ui form segment log-form\" onSubmit={onSubmitForm}>\r\n          <img  className=\"ui centered medium image\" src={logo} alt=\"logo\"/>\r\n              <div className=\"field\">\r\n              {props.logError? <ErrorMessage head=\"لقد حدث خطأ\" content=\"الرجاء التأكد من اسم المستخدم و كلمة المرور\" />:null}\r\n              </div>\r\n            <h4 className=\"ui header title\" >تسجيل الدخول</h4>\r\n            <p style={{padding: '5px'}}></p>\r\n                    <InputField name=\"username\" type=\"text\" placeholder=\"Username\" onChange={onChangeInput} icon=\"user icon\" />\r\n                    <p style={{padding: '1.5px'}}></p>\r\n                    <InputField name=\"password\" type={isShowPassword ? 'text' : 'password'} placeholder=\"Password\" onChange={onChangeInput} \r\n                    icon={isShowPassword? 'icon eye': 'icon eye slash'} onIconClick = {showPassword}/>\r\n                  \r\n                  \r\n                    <div className=\"field\">\r\n                        <center>\r\n                        <button className=\"fluid ui big button log-btn\" type=\"submit\">دخول</button>\r\n                        </center>\r\n                    </div>\r\n                    \r\n                    \r\n            </form>\r\n            </div>\r\n           \r\n       \r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({loginInfo}) => {\r\nreturn {logState: loginInfo.logState, logError: loginInfo.logError}\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","C:\\projects\\carnival\\src\\component\\StoreForms\\SuccessReg.jsx",[],"C:\\projects\\carnival\\src\\component\\StoreForms\\StoreAddress.jsx",[],"C:\\projects\\carnival\\src\\component\\customer\\CustomerForm.jsx",[],"C:\\projects\\carnival\\src\\redux\\reducers\\customerReducer.js",[],"C:\\projects\\carnival\\src\\redux\\reducers\\loginReducer.js",[],"C:\\projects\\carnival\\src\\redux\\reducers\\storeReducer.js",[],"C:\\projects\\carnival\\src\\redux\\Actions\\login.js",[],"C:\\projects\\carnival\\src\\redux\\Actions\\stores.js",[],"C:\\projects\\carnival\\src\\redux\\Actions\\customer.js",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\QrCode.jsx",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\NavBar.jsx",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\Store.jsx",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\PageButtons.jsx",[],"C:\\projects\\carnival\\src\\component\\ErrorMessage.jsx",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\SearchBox.jsx",[],"C:\\projects\\carnival\\src\\component\\login\\components\\InputField.jsx",[],"C:\\projects\\carnival\\src\\component\\StoreForms\\StoreData.jsx",["134"],"import React , {useState , useEffect } from 'react';\r\nimport { useDispatch , useSelector} from 'react-redux';\r\nimport { addStore , clearInfo} from '../../redux/Actions/stores';\r\nimport  uniqueRandom from 'unique-random-at-depth';\r\nimport Modal from 'react-modal';\r\nimport './style.css';\r\n\r\nconst StoreData = ({address }) => {\r\n    const dispatch = useDispatch();\r\n    \r\n    const data = useSelector((data)=>data.stores.address);\r\n    const [validInput,setValidInput] = useState ({status:false ,type:'' , msg:'الرجاء التاكد من صحة البيانات المدخلة'});\r\n    const [storeData, setStoreData] = useState({name:'',owner_name:'',market_phone :0,owner_phone:0,email:'',category:'',postcode:'',building_number:'',code:0})\r\n    const [checkbox,setCheckbox] = useState(true);\r\n    const [open, setOpen] = useState(false);\r\n    const [storeCode , setStoreCode] = useState(uniqueRandom(100000, 1000000, 50));\r\n   \r\n    useEffect(() => {\r\n        if(data.status === 'valid'){\r\n            storeData.name = data.name;\r\n            storeData.market_phone = data.phoneNumber;\r\n            storeData.category = data.category;\r\n            storeData.postcode = address.code;\r\n            storeData.building_number = address.number;\r\n            storeData.code =storeCode;\r\n            dispatch(clearInfo()); \r\n          }\r\n         \r\n          \r\n     },[data,address,storeCode,dispatch]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const {owner_name ,owner_phone} = storeData\r\n        if(owner_name && owner_phone && validInput.status===false) {\r\n         dispatch(addStore(storeData));  \r\n         setStoreData({name:'',owner_name:'',market_phone :0,owner_phone:0,email:'',category:'',postcode:'',building_number:'',code:0})\r\n         setStoreCode(0);\r\n        }\r\n        else\r\n        setValidInput({status : true ,type:'generalError', msg:\"يجب أن لا تكون المدخلات فارغة \"})\r\n        alert(validInput.msg)\r\n    };\r\n    const handleChange =(e)=>{\r\n        setStoreData({...storeData,[e.target.name]:e.target.value});\r\n    }\r\n    const handleChangeOfNumber = (e)=>{\r\n        if(isNaN(e.target.value) && e.target.name === 'market_phone')\r\n        setValidInput({status : true , type :\"NumberErrorMarket\" , msg:\"يجب إدخال رقم فقط\"})\r\n        else if (isNaN(e.target.value) && e.target.name === 'owner_phone')\r\n        setValidInput({status : true , type :\"NumberErrorOwner\" , msg:\"يجب إدخال رقم فقط\"})\r\n        else{\r\n            setStoreData({...storeData,[e.target.name]:e.target.value});\r\n            setValidInput({status : false,type:\"\" , msg:\"\"})\r\n        }\r\n    }\r\n    const handleChangeOfText = (e)=>{\r\n        let format = /[`!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?~]/;\r\n        if(!isNaN(e.target.value)  || format.test(e.target.value))\r\n        setValidInput({status : true , type :\"TextError\" , msg:\"يجب ادخال حروف فقط\"})\r\n        else{\r\n            setStoreData({...storeData,[e.target.name]:e.target.value});\r\n            setValidInput({status : false,type:\"\" , msg:\"\"})\r\n        }\r\n    }\r\n    const customStyles = {\r\n        content : {\r\n          top                   : '50%',\r\n          left                  : '50%',\r\n          right                 : 'auto',\r\n          bottom                : 'auto',\r\n          marginRight           : '-50%',\r\n          transform             : 'translate(-50%, -50%)'\r\n        }\r\n    };\r\n    return (\r\n        data?(\r\n        <form className=\"ui form\" onSubmit={handleSubmit}>\r\n        <div className=\"ui form\">\r\n        <div className=\"field\">\r\n        <label className=\"text \">اسم المحل</label>\r\n            <input disabled type=\"text\" name=\"name\" placeholder=\"اسم المحل\" defaultValue={data.name}  required  />\r\n        </div>\r\n        <div className={validInput.status && validInput.type=== \"TextError\" ?'error field':'field'}>\r\n            <label className=\"text required\" >اسم صاحب المحل</label>\r\n            <input type=\"text\" name=\"owner_name\" placeholder=\"اسم صاحب المحل\"  onChange={handleChangeOfText} maxLength=\"40\"/>\r\n            <div className=\"five wide field\">\r\n            <p>{validInput.status && validInput.type=== \"TextError\" ?`${validInput.msg}`:''}</p>\r\n            </div>  \r\n        </div>\r\n        <div className={validInput.status && validInput.type=== \"NumberErrorMarket\" ?'error field':'field'}>\r\n            <label className=\"text\" >رقم هاتف المحل</label>\r\n            <input type=\"text\" name=\"market_phone\"  defaultValue ={data.phoneNumber} placeholder=\"xxxxxxxx\" onChange ={handleChangeOfNumber} maxLength=\"10\"/>\r\n            <p>{validInput.status && validInput.type=== \"NumberErrorMarket\" ?`${validInput.msg}`:''}</p>\r\n        </div>\r\n\r\n        <div className={validInput.status && validInput.type=== \"NumberErrorOwner\" ?'error field':'field'}>\r\n            <label className=\"text required\" >رقم هاتف صاحب المحل</label>\r\n            <input type=\"text\" name=\"owner_phone\" placeholder=\"xxxxxxxx\" onChange ={handleChangeOfNumber} maxLength=\"10\"/>\r\n            <p>{validInput.status && validInput.type=== \"NumberErrorOwner\" ?`${validInput.msg}`:''}</p>\r\n        </div>\r\n        <div className=\"field\">\r\n            <label className=\"text\" >البريد الالكتروني</label>\r\n            <input type=\"email\" name=\"email\" placeholder=\"البريد الالكتروني\" onChange={handleChange}/>\r\n        </div>\r\n        <div className=\"field \">\r\n            <label  className=\"text\">نوع النشاط</label>\r\n            <input disabled type=\"text\" name=\"category\" placeholder=\"نوع النشاط\" defaultValue ={data.category} />\r\n        </div>\r\n        \r\n        <div className=\"field\" >   \r\n         <input className=\"checkbox\" type=\"checkbox\" name = \"isChecked\" onClick={()=>setCheckbox(!checkbox)} /> \r\n             <span> أوافق على  </span>\r\n            <span className=\"terms\" onClick={(e) => {setOpen(true)}}>شروط الاشتراك</span><span className=\"required\"></span>\r\n            <div>\r\n        <Modal\r\n          isOpen={open}  \r\n          onRequestClose={() => setOpen(false)}\r\n          ariaHideApp={false}\r\n          contentLabel=\"Terms Modal\"\r\n           style={customStyles}\r\n        >\r\n          <div className = \"term-header\">شروط الاشتراك</div>\r\n          <div className=\"term-desc\">\r\n            فيما يلي القوانين اللازم اتباعها للمشاركة في مهرجان مصراتة للتسوق\r\n          </div>\r\n          <ol className=\"term-list\">\r\n                <li>الالتزام بالإجراءات الوقائية من فيروس كورونا حسب الخطة الموضوعة اللجنة العليا .</li>\r\n                <li>إلزام الموظفين والزوار بارتداء الكمامات داخل الجناح او المحل.</li>\r\n                <li>توفير المعقمات الطبية داخل المحل .</li>\r\n                <li>التقيد بإجراءات التباعد الإجتماعي مسافة واحد متر على الأقل.</li>\r\n                <li>التقيد بعدم الإزدحام وذلك بتحديد العدد الكافي للتباعد الإجتماعي.</li>\r\n                <li>توزيع كوبونات المهرجان مجانا بدون فرض قيمة على الزبون او اجباره على الشراء .</li>\r\n            </ol>\r\n            <button className=\"button btn-terms primary\" onClick={() => setOpen(false)} >\r\n            إغلاق\r\n            </button>\r\n        </Modal>\r\n      </div>\r\n        </div>    \r\n        <div className=\"field\"> \r\n        <button className=\"ui button text\" disabled = {checkbox} type=\"submit\">تـسـجـيـل</button>\r\n        </div>\r\n        </div>\r\n        </form> ) :<></>\r\n    );\r\n\r\n}\r\n\r\nexport default StoreData;","C:\\projects\\carnival\\src\\api.js",[],"C:\\projects\\carnival\\src\\component\\StoresDisplay\\ChangeStoreState.jsx",[],"C:\\projects\\carnival\\src\\component\\QrReader\\QrReader.jsx",[],"C:\\projects\\carnival\\src\\apiMakani.js",[],"C:\\projects\\carnival\\src\\apiCustomer.js",[],"C:\\projects\\carnival\\src\\component\\customer\\ReCaptcha.jsx",[],{"ruleId":"135","severity":1,"message":"136","line":26,"column":11,"nodeType":"137","endLine":26,"endColumn":74},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"135","severity":1,"message":"136","line":39,"column":11,"nodeType":"137","endLine":39,"endColumn":67},{"ruleId":"142","severity":1,"message":"143","line":30,"column":8,"nodeType":"144","endLine":30,"endColumn":41,"suggestions":"145"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["146"],"no-negated-in-lhs",["147"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'storeData'. Either include it or remove the dependency array.","ArrayExpression",["148"],"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},"Update the dependencies array to be: [data, address, storeCode, dispatch, storeData]",{"range":"151","text":"152"},[1334,1367],"[data, address, storeCode, dispatch, storeData]"]