[{"C:\\Users\\visitor\\Desktop\\carnival\\src\\index.js":"1","C:\\Users\\visitor\\Desktop\\carnival\\src\\reportWebVitals.js":"2","C:\\Users\\visitor\\Desktop\\carnival\\src\\App.js":"3","C:\\Users\\visitor\\Desktop\\carnival\\src\\redux\\reducers\\index.js":"4","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\login\\Login.jsx":"5","C:\\Users\\visitor\\Desktop\\carnival\\src\\redux\\reducers\\loginReducer.js":"6","C:\\Users\\visitor\\Desktop\\carnival\\src\\redux\\reducers\\customerReducer.js":"7","C:\\Users\\visitor\\Desktop\\carnival\\src\\redux\\Actions\\login.js":"8","C:\\Users\\visitor\\Desktop\\carnival\\src\\redux\\Actions\\customer.js":"9","C:\\Users\\visitor\\Desktop\\carnival\\src\\redux\\Actions\\stores.js":"10","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\login\\components\\InputField.jsx":"11","C:\\Users\\visitor\\Desktop\\carnival\\src\\api.js":"12","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\StoreForms\\StoreAddress.jsx":"13","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\StoreForms\\StoreData.jsx":"14","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\StoreForms\\SuccessReg.jsx":"15","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\qrReader\\QrReader.jsx":"16","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\ErrorMessage.jsx":"17","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\customer\\CustomerForm.jsx":"18","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\Home.jsx":"19","C:\\Users\\visitor\\Desktop\\carnival\\src\\redux\\reducers\\storeReducer.js":"20","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\StoresDisplay\\StoreList.jsx":"21","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\StoresDisplay\\Print.jsx":"22","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\StoresDisplay\\ChangeStoreState.jsx":"23","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\StoresDisplay\\NavBar.jsx":"24","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\StoresDisplay\\PageButtons.jsx":"25","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\StoresDisplay\\QrCode.jsx":"26","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\StoresDisplay\\SearchBox.jsx":"27","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\StoresDisplay\\Store.jsx":"28","C:\\Users\\visitor\\Desktop\\carnival\\src\\apiCustomer.js":"29","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\customer\\ReCaptcha.jsx":"30","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\QrReader\\QrReader.jsx":"31","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\Customer\\CustomerForm.jsx":"32","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\Customer\\ReCaptcha.jsx":"33","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\Footer.jsx":"34","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\NotFound.jsx":"35"},{"size":994,"mtime":1613476745016,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":2077,"mtime":1614151887928,"results":"39","hashOfConfig":"37"},{"size":309,"mtime":1612788838841,"results":"40","hashOfConfig":"37"},{"size":2651,"mtime":1614074461933,"results":"41","hashOfConfig":"37"},{"size":493,"mtime":1612436605812,"results":"42","hashOfConfig":"37"},{"size":377,"mtime":1613044139699,"results":"43","hashOfConfig":"37"},{"size":821,"mtime":1613476671573,"results":"44","hashOfConfig":"37"},{"size":1020,"mtime":1614865060429,"results":"45","hashOfConfig":"37"},{"size":4189,"mtime":1614161520981,"results":"46","hashOfConfig":"37"},{"size":773,"mtime":1613651598999,"results":"47","hashOfConfig":"37"},{"size":2473,"mtime":1613892161952,"results":"48","hashOfConfig":"37"},{"size":5862,"mtime":1614681770116,"results":"49","hashOfConfig":"37"},{"size":7916,"mtime":1614681557944,"results":"50","hashOfConfig":"37"},{"size":1143,"mtime":1614066676334,"results":"51","hashOfConfig":"37"},{"size":1225,"mtime":1613300308659,"results":"52","hashOfConfig":"37"},{"size":284,"mtime":1612687150499,"results":"53","hashOfConfig":"37"},{"size":5392,"mtime":1613643303642,"results":"54","hashOfConfig":"37"},{"size":902,"mtime":1614589122196,"results":"55","hashOfConfig":"37"},{"size":1393,"mtime":1614074085258,"results":"56","hashOfConfig":"37"},{"size":4030,"mtime":1615014379811,"results":"57","hashOfConfig":"37"},{"size":806,"mtime":1614160799983,"results":"58","hashOfConfig":"37"},{"size":844,"mtime":1612856139664,"results":"59","hashOfConfig":"37"},{"size":762,"mtime":1613816186743,"results":"60","hashOfConfig":"37"},{"size":1706,"mtime":1614075757625,"results":"61","hashOfConfig":"37"},{"size":732,"mtime":1614069415551,"results":"62","hashOfConfig":"37"},{"size":803,"mtime":1614681557871,"results":"63","hashOfConfig":"37"},{"size":1800,"mtime":1614072488182,"results":"64","hashOfConfig":"37"},{"size":408,"mtime":1613990866581,"results":"65","hashOfConfig":"37"},{"size":470,"mtime":1613642926151,"results":"66","hashOfConfig":"37"},{"size":1146,"mtime":1613991960706,"results":"67","hashOfConfig":"37"},{"size":6195,"mtime":1614864786470,"results":"68","hashOfConfig":"37"},{"size":602,"mtime":1614858056009,"results":"69","hashOfConfig":"37"},{"size":366,"mtime":1614160830773,"results":"70","hashOfConfig":"37"},{"size":1003,"mtime":1614153400230,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"30611o",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"C:\\Users\\visitor\\Desktop\\carnival\\src\\index.js",[],["146","147"],"C:\\Users\\visitor\\Desktop\\carnival\\src\\reportWebVitals.js",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\App.js",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\redux\\reducers\\index.js",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\login\\Login.jsx",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\redux\\reducers\\loginReducer.js",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\redux\\reducers\\customerReducer.js",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\redux\\Actions\\login.js",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\redux\\Actions\\customer.js",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\redux\\Actions\\stores.js",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\login\\components\\InputField.jsx",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\api.js",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\StoreForms\\StoreAddress.jsx",["148"],"import React, { useState, useEffect } from 'react';\r\nimport logo from '../../image/logo.png';\r\nimport StoreData from './StoreData';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { checkAddress } from '../../redux/Actions/stores';\r\nimport ErrorMessage from '../ErrorMessage';\r\nimport Footer from '../Footer';\r\nimport './style.css';\r\n\r\nconst StoreAddress = () => {\r\n    const dispatch = useDispatch();\r\n    const isError = useSelector(state => state.stores.isError);\r\n    const isInValid = useSelector(state => state.stores.isInValid);\r\n    const storeDefaultData = useSelector((addressData) => addressData.stores.address);\r\n    const [showButton , setShowButton] = useState(false);\r\n    const [address , setAddress] = useState({code:'', number:''});\r\n    const [validInput,setValidInput] = useState ({status:false ,type:'generalError' , msg:'الرجاء التاكد من صحة البيانات المدخلة'});\r\n    const categoryList = [1,4,12,15,18,22,24];\r\n\r\n    const checkCategory = (category) => {\r\n\r\n        if (categoryList.includes(category)) {\r\n            setValidInput({ status: true, type: 'generalError', msg: 'يجب أن يكون العنوان المدخل من ضمن التصنيفات المتاحة' });\r\n            return true;\r\n        }\r\n        setValidInput({ status: false, type: \"\", msg: \"\" })\r\n        return false;\r\n    }\r\n\r\n    useEffect(() => { \r\n        if(storeDefaultData.status === 'valid' && !checkCategory(storeDefaultData.CategoryId) )\r\n            {\r\n                setShowButton(true);\r\n            }\r\n          \r\n    },[storeDefaultData , dispatch ]);\r\n   \r\n    const handleAdressSubmit = (e) =>{\r\n        e.preventDefault();\r\n        const { code, number } = address\r\n        if (code && number && validInput.status === false)\r\n            dispatch(checkAddress(`${address.code}+${address.number}`));\r\n        else\r\n            setValidInput({ status: true, type: 'generalError', msg: \" يجب ادخال الرمز البريدي ورقم المبنى\" })\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setAddress({ ...address, [e.target.name]: e.target.value })\r\n    }\r\n    const handleChangeOfNumber = (e) => {\r\n        if (isNaN(e.target.value))\r\n            setValidInput({ status: true, type: \"NumberError\", msg: \"يجب إدخال رقم فقط\" })\r\n        else {\r\n            setAddress({ ...address, [e.target.name]: e.target.value })\r\n            setValidInput({ status: false, type: \"\", msg: \"\" })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{padding:\"15px 0px\"}}>\r\n            <div className=\"main-container\">\r\n                <div className=\"ui container centered grid\" >\r\n                    <div className=\"ui form segment log-form\" >\r\n                        <form className=\"ui form\" >\r\n                            <img className=\"ui centered medium image\" alt=\"logo\" src={logo} />\r\n                            <h2 style={{ textAlign: 'center', fontFamily: 'inherit' }}>نموذج  التسجيل </h2>\r\n                            {isError || isInValid || (validInput.status && validInput.type === \"generalError\") ? (<ErrorMessage head=\"لقد حدث خطأ \" content={validInput.msg ? validInput.msg : \" العنوان المدخل غير صحيح الرجاء التأكد\"} />) : null}\r\n                            {/* --------- Makani validation ------------ */}\r\n                            <div className=\"ui form\">\r\n                                <div className={validInput.status && validInput.type === \"NumberError\" ? 'error field' : 'field'}>\r\n                                    <label className=\"text required\" >رقم المبنى</label>\r\n                                    <input type=\"text\" name=\"number\" placeholder=\"رقم المبنى\" onChange={handleChangeOfNumber} maxLength=\"4\" required />\r\n                                    <div className=\"five wide field\">\r\n                                        <p>{validInput.status && validInput.type === \"NumberError\" ? `${validInput.msg}` : ''}</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"field \">\r\n                                    <label className=\"text required\">الرمز البريدي</label>\r\n                                    <input type=\"text\" name=\"code\" onChange={handleChange} placeholder=\"الرمز البريدي\" maxLength=\"5\" required />\r\n                                </div>\r\n\r\n                                <div className=\"field\">\r\n                                    {!showButton ? (<button className=\"ui button text\" type=\"submit\" onClick={handleAdressSubmit}>تحقق</button>) : <></>}\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        {!showButton ? <div className=\"address-reg\">\r\n                            ليس لديك عنوان،<a href=\"https://makani.ly/addplace/\" target=\"_blank\" rel=\"noreferrer\"> قم بتسجيل نشاطك التجاري الآن</a>\r\n                        </div> : <></>}\r\n                        {/* --------- divider ------------ */}\r\n                        {showButton ? (\r\n                            <div className=\"ui section divider\"></div>\r\n                        ) : <></>}\r\n                        {/* --------- Store Rgisteration ------------ */}\r\n                        {showButton ? (\r\n                            <StoreData address={address} validInput={validInput} setValidInput={setValidInput} />\r\n                        ) : null}\r\n                         <div className=\"ui section divider\"></div>\r\n                        <Footer />\r\n                    </div>\r\n                    \r\n                </div>\r\n               \r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default StoreAddress;\r\n\r\n","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\StoreForms\\StoreData.jsx",["149"],"import React , {useState , useEffect } from 'react';\r\nimport { useDispatch , useSelector} from 'react-redux';\r\nimport { addStore , clearInfo} from '../../redux/Actions/stores';\r\nimport  uniqueRandom from 'unique-random-at-depth';\r\nimport Modal from 'react-modal';\r\nimport './style.css';\r\n\r\nconst StoreData = ({address ,validInput ,setValidInput }) => {\r\n    const dispatch = useDispatch();\r\n    \r\n    const data = useSelector((data)=>data.stores.address);\r\n    const [storeData, setStoreData] = useState({name:'',owner_name:'',market_phone :'',owner_phone:'',email:'',category:'',postcode:'',building_number:'',code:0})\r\n    const [checkbox,setCheckbox] = useState(true);\r\n    const [open, setOpen] = useState(false);\r\n    const [storeCode , setStoreCode] = useState(uniqueRandom(100000, 1000000, 50));\r\n   \r\n    useEffect(() => {\r\n        if(data.status === 'valid'){\r\n            storeData.name = data.name;\r\n            storeData.market_phone = data.phoneNumber;\r\n            storeData.category = data.category;\r\n            storeData.postcode = address.code;\r\n            storeData.building_number = address.number;\r\n            storeData.code =storeCode;\r\n            dispatch(clearInfo()); \r\n          }\r\n         \r\n          \r\n     },[data,address,storeCode,dispatch]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const {owner_name ,owner_phone} = storeData\r\n        if(isNaN(owner_name) && !isNaN(owner_phone) && owner_phone.length === 10 && validInput.status===false) {\r\n         dispatch(addStore(storeData));  \r\n         setStoreCode(0);\r\n        }\r\n        else\r\n        {\r\n            setValidInput({status : true ,type:'generalError', msg:\"يجب أن  تكون المدخلات غير فارغة وصحيحة \"})\r\n        }\r\n    };\r\n    const handleChange =(e)=>{\r\n        setStoreData({...storeData,[e.target.name]:e.target.value});\r\n    }\r\n    const handleChangeOfNumber = (e)=>{\r\n        if(isNaN(e.target.value) && e.target.name === 'market_phone')\r\n        setValidInput({status : true , type :\"NumberErrorMarket\" , msg:\"يجب إدخال رقم فقط\"})\r\n        else if (isNaN(e.target.value) && e.target.name === 'owner_phone')\r\n        setValidInput({status : true , type :\"NumberErrorOwner\" , msg:\"يجب إدخال رقم فقط\"})\r\n        else{\r\n            setStoreData({...storeData,[e.target.name]:e.target.value});\r\n            setValidInput({status : false,type:\"\" , msg:\"\"})\r\n        }\r\n    }\r\n    const handleChangeOfText = (e)=>{\r\n        let format = /[`!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?~]/;\r\n        if(!isNaN(e.target.value)  || format.test(e.target.value))\r\n        setValidInput({status : true , type :\"TextError\" , msg:\"يجب ادخال حروف فقط\"})\r\n        else{\r\n            setStoreData({...storeData,[e.target.name]:e.target.value});\r\n            setValidInput({status : false,type:\"\" , msg:\"\"})\r\n        }\r\n    }\r\n    const customStyles = {\r\n        content : {\r\n          top                   : '50%',\r\n          left                  : '50%',\r\n          right                 : 'auto',\r\n          bottom                : 'auto',\r\n          marginRight           : '-50%',\r\n          transform             : 'translate(-50%, -50%)'\r\n        }\r\n    };\r\n    return (\r\n        data?(\r\n        <form className=\"ui form\" onSubmit={handleSubmit}>\r\n        <div className=\"ui form\">\r\n        <div className=\"field\">\r\n        <label className=\"text \">اسم المحل</label>\r\n            <input disabled type=\"text\" name=\"name\" placeholder=\"اسم المحل\" defaultValue={data.name}  required  />\r\n        </div>\r\n        <div className=\"field\">\r\n        <label className=\"text \">تفاصيل</label>\r\n            <input disabled type=\"text\" name=\"name\" placeholder=\"تفاصيل\" defaultValue={data.details}  required  />\r\n        </div>\r\n        <div className={validInput.status && validInput.type=== \"TextError\" ?'error field':'field'}>\r\n            <label className=\"text required\" >اسم صاحب المحل</label>\r\n            <input type=\"text\" name=\"owner_name\" placeholder=\"اسم صاحب المحل\"  onChange={handleChangeOfText} maxLength=\"40\"/>\r\n            <div className=\"five wide field\">\r\n            <p>{validInput.status && validInput.type=== \"TextError\" ?`${validInput.msg}`:''}</p>\r\n            </div>  \r\n        </div>\r\n        <div className={validInput.status && validInput.type=== \"NumberErrorMarket\" ?'error field':'field'}>\r\n            <label className=\"text\" >رقم هاتف المحل</label>\r\n            <input type=\"text\" name=\"market_phone\"  defaultValue ={data.phoneNumber} placeholder=\"xxxxxxxx\" onChange ={handleChangeOfNumber} maxLength=\"10\"/>\r\n            <p>{validInput.status && validInput.type=== \"NumberErrorMarket\" ?`${validInput.msg}`:''}</p>\r\n        </div>\r\n\r\n        <div className={validInput.status && validInput.type=== \"NumberErrorOwner\" ?'error field':'field'}>\r\n            <label className=\"text required\" >رقم هاتف صاحب المحل</label>\r\n            <input type=\"text\" name=\"owner_phone\" placeholder=\"xxxxxxxx\" onChange ={handleChangeOfNumber} maxLength=\"10\"/>\r\n            <p>{validInput.status && validInput.type=== \"NumberErrorOwner\" ?`${validInput.msg}`:''}</p>\r\n        </div>\r\n        <div className=\"field\">\r\n            <label className=\"text\" >البريد الالكتروني</label>\r\n            <input type=\"email\" name=\"email\" placeholder=\"البريد الالكتروني\" onChange={handleChange}/>\r\n        </div>\r\n        \r\n        <div className=\"field \">\r\n            <label  className=\"text\">نوع النشاط</label>\r\n            <input disabled type=\"text\" name=\"category\" placeholder=\"نوع النشاط\" defaultValue ={data.category} />\r\n        </div>\r\n        \r\n        <div className=\"field\" >   \r\n         <input className=\"checkbox\" type=\"checkbox\" name = \"isChecked\" onClick={()=>setCheckbox(!checkbox)} /> \r\n             <span> أوافق على  </span>\r\n            <span className=\"terms\" onClick={(e) => {setOpen(true)}}>شروط الاشتراك</span><span className=\"required\"></span>\r\n            <div>\r\n        <Modal\r\n          isOpen={open}  \r\n          onRequestClose={() => setOpen(false)}\r\n          ariaHideApp={false}\r\n          contentLabel=\"Terms Modal\"\r\n          style={customStyles}\r\n        >\r\n          <div className = \"term-header\">شروط الاشتراك</div>\r\n          <div className=\"term-desc\">\r\n            فيما يلي القوانين اللازم اتباعها للمشاركة في مهرجان مصراتة للتسوق\r\n          </div>\r\n          <ol className=\"term-list\">\r\n                <li>الالتزام بالإجراءات الوقائية من فيروس كورونا حسب الخطة الموضوعة اللجنة العليا .</li>\r\n                <li>إلزام الموظفين والزوار بارتداء الكمامات داخل الجناح او المحل.</li>\r\n                <li>توفير المعقمات الطبية داخل المحل .</li>\r\n                <li>التقيد بإجراءات التباعد الإجتماعي مسافة واحد متر على الأقل.</li>\r\n                <li>التقيد بعدم الإزدحام وذلك بتحديد العدد الكافي للتباعد الإجتماعي.</li>\r\n                <li>توزيع كوبونات المهرجان مجانا بدون فرض قيمة على الزبون او اجباره على الشراء .</li>\r\n            </ol>\r\n            <button className=\"button btn-terms primary\" onClick={() => setOpen(false)} >\r\n            إغلاق\r\n            </button>\r\n        </Modal>\r\n      </div>\r\n        </div>    \r\n        <div className=\"field\"> \r\n        <button className=\"ui button text\" disabled = {checkbox} type=\"submit\">تـسـجـيـل</button>\r\n        </div>\r\n        </div>\r\n        </form> ) :<></>\r\n    );\r\n}\r\n\r\nexport default StoreData;","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\StoreForms\\SuccessReg.jsx",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\qrReader\\QrReader.jsx",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\ErrorMessage.jsx",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\customer\\CustomerForm.jsx",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\Home.jsx",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\redux\\reducers\\storeReducer.js",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\StoresDisplay\\StoreList.jsx",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\StoresDisplay\\Print.jsx",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\StoresDisplay\\ChangeStoreState.jsx",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\StoresDisplay\\NavBar.jsx",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\StoresDisplay\\PageButtons.jsx",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\StoresDisplay\\QrCode.jsx",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\StoresDisplay\\SearchBox.jsx",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\StoresDisplay\\Store.jsx",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\apiCustomer.js",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\customer\\ReCaptcha.jsx",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\QrReader\\QrReader.jsx",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\Customer\\CustomerForm.jsx",["150"],"import React , {useEffect, useState } from 'react'\r\nimport logo from '../../image/CustomerLogo.png';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport { addCustomer } from '../../redux/Actions/customer';\r\nimport { getStoreInfo } from '../../redux/Actions/stores';\r\nimport ErrorMessage from '../ErrorMessage';\r\nimport ReCaptcha from './ReCaptcha';\r\nimport Footer from '../Footer';\r\n\r\nconst CustomerForm = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const isError = useSelector(state => state.customer.isError);\r\n    const isDone = useSelector(state => state.customer.isDone);\r\n    const storeInfo = useSelector(state => state.stores.storeInfo);\r\n   \r\n    const [verfied,setVerified] = useState(false)\r\n    const [validInput,setValidInput] = useState ({status:false ,type:'' , msg:'الرجاء التاكد من صحة البيانات المدخلة'});\r\n    const [customerData, setCustomerData] = useState({fullname:'', phonenumber:'',buildingnumber:'',postcode:'',shopname:'', city:''});\r\n    \r\n    const cityList = ['مصراتة','طرابلس','بنغازي','غريان','الخمس','زليتن','سرت','الزاوية'];\r\n        if (storeInfo) \r\n        {\r\n           customerData.buildingnumber = storeInfo.building_number;\r\n           customerData.postcode = storeInfo.postcode;\r\n           customerData.shopname = storeInfo.name;\r\n        }   \r\n\r\n    useEffect(()=>{\r\n        dispatch(getStoreInfo(props.match.params.storeCode));\r\n    },[]);\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const {fullname,phonenumber,city} = customerData \r\n        let nameLen = fullname.split(\" \").length;\r\n        \r\n        if(nameLen >= 4 && nameLen <= 7)\r\n        {\r\n        if(isNaN(fullname) && !isNaN(phonenumber) && phonenumber.length === 10 &&city && !validInput.status)\r\n        {\r\n         dispatch(addCustomer(customerData));\r\n        }\r\n        else\r\n        {\r\n        setValidInput({status : true ,type:'generalError', msg:\" يجب أن تكون المدخلات غير فارغة وصحيحة \"})\r\n        }\r\n        }\r\n        else\r\n        setValidInput({ status: true, type: 'generalError', msg: 'الرجاء ادخال الاسم الرباعي ' });\r\n \r\n    };\r\n    \r\n    const handleChangeOfNumber = (e)=>{\r\n        if(isNaN(e.target.value))\r\n        setValidInput({status : true , type :\"NumberError\" , msg:\"يجب إدخال رقم فقط\"})\r\n        else{\r\n            setCustomerData({...customerData,[e.target.name]:e.target.value})\r\n            setValidInput({status : false,type:\"\" , msg:\"\"})\r\n        }\r\n    }\r\n    const handleChangeOfText = (e)=>{\r\n        let format = /[`!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?~1234567890]/;\r\n        if(!isNaN(e.target.value)  || format.test(e.target.value))\r\n        setValidInput({status : true , type :\"TextError\" , msg:\"يجب ادخال حروف فقط\"})\r\n        else{     \r\n            setCustomerData({...customerData,[e.target.name]:e.target.value})\r\n            setValidInput({status : false,type:\"\" , msg:\"\"})\r\n        }\r\n    }\r\n \r\n    const form = () => (\r\n        <div>\r\n            <div className=\"ui container centered grid reg-container\" >\r\n            <div className=\"ui form segment log-form\" >\r\n            <form className=\"ui form \" >\r\n            <img className=\"ui centered large image\" alt=\"logo\" src={logo}/>\r\n            <h2 style={{fontFamily: 'inherit', color:\"#222\" , marginTop:\"50px\"}}><b>نموذج المشاركة </b> </h2>\r\n            <h3 style={{fontFamily: 'inherit', color:\"#222\" }}><b>{storeInfo.name}</b> {storeInfo.details} </h3>\r\n            \r\n            {isError || (validInput.status && validInput.type=== \"generalError\") ? (<ErrorMessage head=\"لقد حدث خطأ\" content={validInput.msg?validInput.msg:\"لا يمكنك التسجيل الآن\"} /> ): null}\r\n            <div className=\"ui form\" >\r\n            <div className={validInput.status && validInput.type=== \"TextError\" ?'error field':'field'}>\r\n                <label className=\"text required\">الاسم الرباعي</label>\r\n                <input type=\"text\" name=\"fullname\" onChange ={handleChangeOfText} placeholder=\"الاسم\" required  maxLength=\"40\"/>\r\n                <div className=\"five wide field\">\r\n                <p>{validInput.status && validInput.type=== \"TextError\" ?`${validInput.msg}`:''}</p>\r\n                </div>  \r\n            </div>\r\n\r\n            <div className={validInput.status && validInput.type=== \"NumberError\" ?'error field':'field'}>\r\n                <label className=\"text required\" >رقم الهاتف</label>\r\n                <div className=\"ui labeled input \">\r\n                <input type=\"tel\" name=\"phonenumber\" placeholder=\"xxxxxxxx\" onChange ={handleChangeOfNumber}  maxLength=\"10\" required/>\r\n                <p>{validInput.status && validInput.type=== \"NumberError\" ?`${validInput.msg}`:''}</p>\r\n                </div>\r\n            </div>\r\n        \r\n            <div className=\"field \">\r\n                <label className=\"text required\" >المدينة</label>\r\n                <select name=\"city\" className=\"ui search dropdown drop-text\" onChange={handleChangeOfText}>\r\n                <option value=\"\">اختر مدينة</option>\r\n                {\r\n                    cityList.map((city,index)=>\r\n                    <option value={city} key={index}>{city}</option>)\r\n                }\r\n                </select>\r\n            </div>\r\n            <div className=\"ui centered medium image\" style={{marginTop:\"30px\"}}>\r\n            <ReCaptcha setVerified={setVerified}/>\r\n            </div>\r\n            <div className=\"field\">\r\n            <button className=\"ui button text\" type=\"submit\" onClick={handleSubmit} disabled ={!verfied} >تسجيل</button>\r\n            </div>\r\n            </div>\r\n            </form>\r\n            <div className=\"ui section divider\"></div>\r\n            <Footer />\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    return ( \r\n        isDone ? (()=>{\r\n            setCustomerData({fullname:'', phonenumber:'',buildingnumber:'',postcode:'',shopname:'', city:''});\r\n            \r\n        }): storeInfo? form() : <></>\r\n    )\r\n}\r\n\r\nexport default CustomerForm;\r\n\r\n","C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\Customer\\ReCaptcha.jsx",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\Footer.jsx",[],"C:\\Users\\visitor\\Desktop\\carnival\\src\\component\\NotFound.jsx",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":36,"column":7,"nodeType":"157","endLine":36,"endColumn":37,"suggestions":"158"},{"ruleId":"155","severity":1,"message":"159","line":29,"column":8,"nodeType":"157","endLine":29,"endColumn":41,"suggestions":"160"},{"ruleId":"155","severity":1,"message":"161","line":31,"column":7,"nodeType":"157","endLine":31,"endColumn":9,"suggestions":"162"},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkCategory'. Either include it or remove the dependency array.","ArrayExpression",["165"],"React Hook useEffect has a missing dependency: 'storeData'. Either include it or remove the dependency array.",["166"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.storeCode'. Either include them or remove the dependency array.",["167"],"no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [storeDefaultData, dispatch, checkCategory]",{"range":"174","text":"175"},"Update the dependencies array to be: [data, address, storeCode, dispatch, storeData]",{"range":"176","text":"177"},"Update the dependencies array to be: [dispatch, props.match.params.storeCode]",{"range":"178","text":"179"},[1511,1541],"[storeDefaultData, dispatch, checkCategory]",[1241,1274],"[data, address, storeCode, dispatch, storeData]",[1404,1406],"[dispatch, props.match.params.storeCode]"]